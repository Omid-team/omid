[{"id":"207","title":"<ArrayableArray 2>","about":"","code":"class ArrayableArray extends ArrayList<Object> { \r\n public Class type; \r\n public ArrayableArray parent; \r\n public ArrayableArray(Class type) { \r\n this.type = type; \r\n } \r\n public ArrayableArray() { \r\n this.type = Integer.class; \r\n } \r\n @Override \r\n public boolean add(Object obj) { \r\n if(obj.getClass() == this.type) { \r\n super.add(obj); \r\n } else { \r\n if(obj instanceof ArrayableArray) { \r\n ArrayableArray arr = (ArrayableArray)obj; \r\n if(arr.type == this.type) { \r\n super.add(arr); \r\n arr.parent = this; \r\n } else { \r\n throw new IllegalArgumentException(\"Given array type does not match the parent Array type. Given type:\"\".concat(arr.type.toString()).concat(\"\" Array type:\"\").concat(this.type.toString()).concat(\"\"\")); \r\n } \r\n } else { \r\n throw new IllegalArgumentException(\"Given value type does not match the Array value type. Given type:\"\".concat(obj.getClass().toString()).concat(\"\" Array type:\"\").concat(this.type.toString()).concat(\"\"\")); \r\n } \r\n } \r\n return true; \r\n } \r\n @Override \r\n public void add(int index,Object obj){ \r\n if(obj.getClass() == this.type) { \r\n super.add(index,obj); \r\n } else { \r\n if(obj instanceof ArrayableArray) { \r\n ArrayableArray arr = (ArrayableArray)obj; \r\n if(arr.type == this.type) { \r\n super.add(index,arr); \r\n arr.parent = this; \r\n } else { \r\n throw new IllegalArgumentException(\"Given array type does not match the parent Array type. Given type:\"\".concat(arr.type.toString()).concat(\"\" Array type:\"\").concat(this.type.toString()).concat(\"\"\")); \r\n } \r\n } else { \r\n throw new IllegalArgumentException(\"Given value type does not match the Array value type. Given type:\"\".concat(obj.getClass().toString()).concat(\"\" Array type:\"\").concat(this.type.toString()).concat(\"\"\")); \r\n } \r\n } \r\n } \r\n public String toJSON() { \r\n String str = null; \r\n try{ \r\n Gson gson = new Gson(); \r\n JsonElement jsonArray = gson.toJsonTree(this, new TypeToken<List<Object() {}.getType()); \r\n str = jsonArray.toString(); \r\n } catch(NoClassDefFoundError e) { \r\n println(\"GSON not defined.cannot convert array to json\"); \r\n } \r\n return str; \r\n } \r\n public ArrayableArray getArray(int index) { \r\n ArrayableArray ret; \r\n if(super.get(index) instanceof ArrayableArray) { \r\n ret = (ArrayableArray)super.get(index); \r\n } else { \r\n throw new IllegalArgumentException(\"Excepted:\"\".concat(this.getClass().toString()).concat(\"\",but got:\"\").concat(super.get(index).getClass().toString()).concat(\"\"\")); \r\n } \r\n return ret; \r\n } \r\n}","androidv4_supported":"1","androidx_supported":"1","category":"Java","source":"","uid":"0","username":"Unknown"},{"id":"206","title":"<ArrayableArray>","about":"GSON library is required, if for some reason you cannot import this library, delete the toJSON () method The library will no longer be needed, but then you will lose the ability to convert the list into a JSON string This is a list that can store both values and other lists. The list can store any type of values, but only the one that was set in the original list (in fact, it is easy to manage, but it's better not to risk it) The code was tested in Processing 3 (A program using Java-based language, so that for those who know Java, this program will be easy) and everything works perfectly ...","code":"class ArrayableArray extends ArrayList<Object> { \r\n public Class type; \r\n public ArrayableArray(Class type) { \r\n this.type = type; \r\n } \r\n public ArrayableArray() { \r\n this.type = Integer.class; \r\n } \r\n @Override \r\n public boolean add(Object obj) { \r\n if(obj.getClass() == this.type) { \r\n super.add(obj); \r\n } else { \r\n if(obj instanceof ArrayableArray) { \r\n ArrayableArray arr = (ArrayableArray)obj; \r\n if(arr.type == this.type) { \r\n super.add(obj); \r\n } else { \r\n throw new IllegalArgumentException(\"Given array type does not match the parent Array type. Given type:\"\".concat(arr.type.toString()).concat(\"\" Array type:\"\").concat(this.type.toString()).concat(\"\"\")); \r\n } \r\n } else { \r\n throw new IllegalArgumentException(\"Given value type does not match the Array value type. Given type:\"\".concat(obj.getClass().toString()).concat(\"\" Array type:\"\").concat(this.type.toString()).concat(\"\"\")); \r\n } \r\n } \r\n return true; \r\n } \r\n @Override \r\n public void add(int index,Object obj){ \r\n if(obj.getClass() == this.type) { \r\n super.add(obj); \r\n } else { \r\n if(obj instanceof ArrayableArray) { \r\n ArrayableArray arr = (ArrayableArray)obj; \r\n if(arr.type == this.type) { \r\n super.add(obj); \r\n } else { \r\n throw new IllegalArgumentException(\"Given array type does not match the parent Array type. Given type:\"\".concat(arr.type.toString()).concat(\"\" Array type:\"\").concat(this.type.toString()).concat(\"\"\")); \r\n } \r\n } else { \r\n throw new IllegalArgumentException(\"Given value type does not match the Array value type. Given type:\"\".concat(obj.getClass().toString()).concat(\"\" Array type:\"\").concat(this.type.toString()).concat(\"\"\")); \r\n } \r\n } \r\n } \r\n public String toJSON() { \r\n String str = null; \r\n try{ \r\n Gson gson = new Gson(); \r\n JsonElement jsonArray = gson.toJsonTree(this, new TypeToken<List<Object() {}.getType()); \r\n str = jsonArray.toString(); \r\n } catch(NoClassDefFoundError e) { \r\n println(\"GSON not defined.cannot convert array to json\"); \r\n } \r\n return str; \r\n } \r\n public ArrayableArray getArray(int index) { \r\n ArrayableArray ret; \r\n if(super.get(index) instanceof ArrayableArray) { \r\n ret = (ArrayableArray)super.get(index); \r\n } else { \r\n throw new IllegalArgumentException(\"Excepted:\"\".concat(this.getClass().toString()).concat(\"\",but got:\"\").concat(super.get(index).getClass().toString()).concat(\"\"\")); \r\n } \r\n return ret; \r\n } \r\n} \r\n void setup() { \r\n ArrayableArray arr = new ArrayableArray(Integer.class); \r\n arr.add(1); \r\n arr.add(new ArrayableArray(Integer.class)); \r\n arr.getArray(1).add(1); \r\n arr.getArray(1).add(8); \r\n arr.getArray(1).add(new ArrayableArray(Integer.class)); \r\n arr.getArray(1).getArray(2).add(7); \r\n arr.getArray(1).getArray(2).add(1); \r\n arr.getArray(1).add(5); \r\n arr.add(6); \r\n println(arr.toJSON()); \r\n}","androidv4_supported":"1","androidx_supported":"1","category":"Java","source":"","uid":"0","username":"Unknown"},{"id":"291","title":"ActionBar - Change Home Button","about":"If in your project have Appcompat change ActionBar on SupportActionBar. Replace ic_home on your name of imageview.","code":"getActionBar().setHomeAsUpIndicator(R.drawable.ic_home);","androidv4_supported":"1","androidx_supported":"1","category":"Java,Widget","source":"","uid":"0","username":"Unknown"},{"id":"292","title":"ActionBar - Menu","about":"","code":"}\r\n@Override\r\npublic boolean onCreateOptionsMenu(Menu menu){\r\nmenu.add(\"Share\")\r\n.setIcon(R.drawable.share)\r\n .setShowAsAction(MenuItem.SHOW_AS_ACTION_ALWAYS);\r\nmenu.add(\"Copy\")\r\n.setIcon(R.drawable.copy)\r\n .setShowAsAction(MenuItem.SHOW_AS_ACTION_ALWAYS);\r\nreturn true;\r\n}\r\n@Override\r\npublic boolean onOptionsItemSelected(final MenuItem item){\r\n switch (item.getTitle().toString()) {\r\ncase \"Copy\":\r\n_copy();\r\n\r\nbreak;\r\ncase \"Share\":\r\n_share();\r\nreturn true;\r\n}\r\n return super.onOptionsItemSelected(item);","androidv4_supported":"1","androidx_supported":"1","category":"Java,Widget","source":"","uid":"0","username":"Unknown"},{"id":"11","title":"ActionBar Back Home","about":"If your app using AppCompat Replace getActionBar on getSupportActionBar","code":"getActionBar().setDisplayHomeAsUpEnabled(true);\n\/* *\/} \n@Override \npublic boolean onMenuItemSelected(int featureId, MenuItem item) {\nint itemId = item.getItemId(); \nswitch (itemId) {\ncase android.R.id.home:\nfinish();\nbreak;\n}\nreturn true;","androidv4_supported":"1","androidx_supported":"1","category":"Java,Widget","source":"","uid":"0","username":"Unknown"},{"id":"396","title":"ActionBar Color","about":"This code for ActionBar. If you use Toolbar (APPCOMPAT) replace getActionBar() on getSupportActionBar()","code":"\/\/ActionBar Color\r\nActionBar actionBar = getActionBar(); actionBar.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(Color.parseColor(\"#191919\")));\r\nif (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\r\n Window w = MainActivity.this.getWindow();\r\n w.clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);\r\n w.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);\r\n w.setStatusBarColor(Color.parseColor(\"#000000\"));\r\n}\r\n\r\n\/\/change actionbar title color\r\ngetActionBar().setTitle(Html.fromHtml(\"<font color='#FF0000'>Color Tools<\/font>\"));\r\n\r\n\r\n\/\/something can be change with header elevant\r\n\r\ntry {\r\nif (Build.VERSION.SDK_INT >= 21) {\r\ngetWindow().clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);\r\ngetWindow().addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);\r\ngetWindow().setStatusBarColor(0xFF263238);\r\nheaders.setElevation(10f); \/\/your actionbar linear\r\n}\r\n}\r\ncatch (Exception e) {\r\n};","androidv4_supported":"1","androidx_supported":"1","category":"Java,Widget","source":"","uid":"0","username":"Unknown"},{"id":"8","title":"ActionBar Fullscreen","about":"about in comments...","code":"\/\/full screen\r\ngetWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,WindowManager.LayoutParams.FLAG_FULLSCREEN);\r\n\r\n\/\/unfullscreen\r\ngetWindow().clearFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN);","androidv4_supported":"1","androidx_supported":"1","category":"Java,Widget","source":"","uid":"0","username":"Unknown"},{"id":"12","title":"ActionBar Set Icon","about":"","code":"getActionBar().setIcon(r.drawable.icon_name);","androidv4_supported":"1","androidx_supported":"1","category":"Java,Widget","source":"","uid":"0","username":"Unknown"},{"id":"395","title":"ActionBar Show\/Hide","about":"Add add source directly and paste this code.","code":"\/\/show actionbar \r\n getActionBar().show();\r\n\r\n\/\/hide ActionBar \r\n getActionBar().hide();\r\n\r\n\/\/APPCOMPAT (show)\r\ngetSupportActionBar().show();\r\n\r\n\/\/APPCOMPAT (hide)\r\ngetSupportActionBar().hide();","androidv4_supported":"1","androidx_supported":"1","category":"Java,Widget","source":"","uid":"0","username":"Unknown"},{"id":"13","title":"ActionBar SubTitle","about":"Replace \"Subtitle\" on your subtitle.","code":"getActionBar().setSubtitle(\"Subtitle\");","androidv4_supported":"1","androidx_supported":"1","category":"Java,Widget","source":"","uid":"0","username":"Unknown"},{"id":"14","title":"ActionBar Title","about":"Replace \"Title\" on your title...","code":"getActionBar().setTitle(\"Title\");","androidv4_supported":"1","androidx_supported":"1","category":"Java,Widget","source":"","uid":"0","username":"Unknown"},{"id":"15","title":"ActionBar Title RGBG","about":"","code":"String Int_title = String.format(Locale.US, \"#%06X\", (0xFFFFFF & Color.argb(120,50,90,10)));\r\n\r\ngetActionBar().setTitle(Html.fromHtml(\"<font color=\"\" + Int_title + \"\">Gabriel<\/font>\"));","androidv4_supported":"1","androidx_supported":"1","category":"Java,Widget","source":"","uid":"0","username":"Unknown"},{"id":"412","title":"Activity - Remove Animation","about":"Remove activity animation","code":"overridePendingTransitions(0, 0);","androidv4_supported":"1","androidx_supported":"1","category":"Java","source":"","uid":"0","username":"Unknown"},{"id":"465","title":"Activity - Transition","about":"This code is one of the most useful in animation since it provides an animation when leaving an activity.","code":"overridePendingTransition(android.R.anim.slide_in_left, android.R.anim.slide_out_right);\n\n\noverridePendingTransition(android.R.anim.overshoot_interpolator, android.R.anim.overshoot_interpolator);\n\n\noverridePendingTransition(android.R.anim.linear_interpolator, android.R.anim.linear_interpolator);\n\n\/Code Created by Gabriel Gymkhana and reconfigured by T\u00f8astcode.","androidv4_supported":"1","androidx_supported":"1","category":"Java","source":"","uid":"0","username":"Unknown"},{"id":"406","title":"AdapterViewFlipper","about":"AdapterViewFlipper","code":"final AdapterViewFlipper adapterViewFlipper = new AdapterViewFlipper(MainActivity.this); linear1.addView(adapterViewFlipper);\n\nfinal int IMAGES[] = {R.drawable.ic_looks_one_black,\t\t\t\tR.drawable.ic_looks_two_black,\nR.drawable.ic_looks_three_black,\tR.drawable.ic_looks_four_black,\nR.drawable.ic_looks_five_black};\n\n\/\/ Names of Pages\nfinal String TEXTS[] = {\"AdapterViewFlipper 1\", \"AdapterViewFlipper 2\", \"AdapterViewFlipper 3\", \"AdapterViewFlipper 4\", \"AdapterViewFlipper 5\"};\n\n\nFlipperAdapter flipperAdapter = new FlipperAdapter(this, TEXTS, IMAGES);\n adapterViewFlipper.setAdapter(flipperAdapter); adapterViewFlipper.setFlipInterval(3000); adapterViewFlipper.setAutoStart(true); }\n\n\nfinal class FlipperAdapter extends BaseAdapter {\nContext ctx;\nint[] IMAGES;\nString[] TEXTS;\nLayoutInflater inflater;\n\npublic FlipperAdapter(Context context, String[] TEXTS, int[] IMAGES){\nthis.ctx = context;\nthis.IMAGES = IMAGES;\nthis.TEXTS = TEXTS;\nthis.inflater = LayoutInflater.from(context); }\n\n@Override public int getCount() {\nreturn TEXTS.length; }\n\n@Override\npublic Object getItem(int position) {\nreturn null; }\n\n@Override public long getItemId(int position) {\nreturn 0; }\n\n@Override\npublic View getView(int position, View view, ViewGroup parent) {\n\nview = inflater.inflate(R.layout.adapterviewflipper, null);\n\nTextView textview1 = (TextView) view.findViewById(R.id.textview1);\nImageView imageview1 = (ImageView) view.findViewById(R.id.imageview1);\n\ntextview1.setText(TEXTS[position]);\nimageview1.setImageResource(IMAGES[position]);\n\nreturn view; }\n\n\n\/\/NOTE\n\n\/\/inside \"main.xml\"\n\/\/linear1\n\n\/\/inside \"adapterviewflipper.xml\"\n\/\/imagview1\n\/\/textview1","androidv4_supported":"1","androidx_supported":"1","category":"Java,Widget","source":"","uid":"0","username":"Unknown"},{"id":"247","title":"Admob Banner","about":"","code":"How To Add Banner Ads From AdMob With Sketchware And AIDE ?\r\n\r\n* First:\r\n1 - add linear1 to your project to show ads in linear1\r\n2 - add this code to MoreBlock\r\n\r\n#### START ####\r\nMobileAds.initialize(this, \"ca-app-pub-7530745542139842~3104915699\");\r\nfinal AdView adView = new AdView(this);\r\nadView.setLayoutParams(new LinearLayout.LayoutParams(android.widget.LinearLayout.LayoutParams.WRAP_CONTENT, android.widget.LinearLayout.LayoutParams.WRAP_CONTENT));\r\nlinear1.addView(adView);\r\nadView.setAdSize(AdSize.BANNER);\r\nadView.setAdUnitId(\"ca-app-pub-7530745542139842\/7894686875\");\r\n\r\nAdRequest adRequest = new AdRequest.Builder().build();\r\nadView.loadAd(adRequest);\r\nadView.setAdListener(new AdListener() {\r\n@Override\r\npublic void onAdLoaded() {\r\n\/\/showMessage(\"Loaded\");\r\n}\r\n@Override\r\npublic void onAdFailedToLoad(int errorCode) {\r\nshowMessage(\"No Internet Connection\");\r\n}\r\n@Override\r\npublic void onAdOpened() {\r\nshowMessage(\"Opened\");\r\n}\r\n@Override\r\npublic void onAdLeftApplication() {\r\n\/\/showMessage(\"Leave App\");\r\n}\r\n@Override\r\npublic void onAdClosed() {\r\n\/\/showMessage(\"Clossed\");\r\n}\r\n});\r\n###### End #####\r\n\r\n\r\n* More:\r\nOpen Aide --> Manifest Project Add permission INTERNET and ACCESS_NETWORK_STATE\r\n\r\n* Add Again:\r\n* On Manifest:\r\n##########\r\n<meta-data\r\n android:name=\"com.google.android.gms.version\"\r\n android:value=\"@integer\/google_play_services_version\" \/>\r\n<activity\r\n android:name=\"com.google.android.gms.ads.AdActivity\"\r\n android:configChanges=\"keyboard|keyboardHidden|orientation|screenLayout|uiMode|screenSize|smallestScreenSize\"\r\n android:theme=\"@android:style\/Theme.Translucent\" \/>\r\n###########\r\n\r\nOpen MainActivity (place admob on sketchware)\r\nadd import code like this:\r\n############\r\nimport com.google.android.gms.ads.MobileAds;\r\nimport com.google.android.gms.ads.AdRequest;\r\nimport com.google.android.gms.ads.AdView;\r\nimport com.google.android.gms.ads.AdListener;\r\nimport com.google.android.gms.ads.AdSize;\r\n###########\r\n\r\nAnd Last Open Build.gradle add:\r\ncom.google.android.gms:play-services-ads:+\r\n\r\nDone and see!","androidv4_supported":"1","androidx_supported":"1","category":"Java","source":"","uid":"0","username":"Unknown"},{"id":"248","title":"Admob Full View","about":"","code":"Ads AdMob Full View.\r\n\r\nOn Sketchware onCreate Add This:\r\n###########\r\nMobileAds.initialize(this, \"ca-app-pub-7530745542139842~1196614254\"); \r\nmInterstitialAd = new InterstitialAd(this); \r\nmInterstitialAd.setAdUnitId(\"ca-app-pub-7530745542139842\/4425412820\");\r\nmInterstitialAd.loadAd(new AdRequest.Builder().build());\r\nmInterstitialAd.setAdListener(new AdListener() { \r\n@Override \r\npublic void onAdLoaded() { \r\n\/\/ Code to be executed when an ad finishes loading. \r\n} \r\n@Override \r\npublic void onAdFailedToLoad(int errorCode) { \r\n\/\/ Code to be executed when an ad request fails. \r\n} \r\n@Override\r\npublic void onAdOpened() { \r\n\/\/ Code to be executed when the ad is displayed. \r\n} \r\n@Override\r\npublic void onAdLeftApplication() { \r\n\/\/ Code to be executed when the user has left the app.\r\n} \r\n@Override \r\npublic void onAdClosed() {\r\n\/\/ Load the next interstitial.\r\nmInterstitialAd.loadAd(new AdRequest.Builder().build()); \r\n\/\/ Code to be executed when when the interstitial ad is closed.\r\n} \r\n});\r\n#############\r\n\r\nTo View This Add OnClick\r\n##############\r\nif (mInterstitialAd.isLoaded()) {\r\nmInterstitialAd.show();\r\n}\r\n##############\r\n\r\n\r\nDone Export to Aide Add import and private:\r\n##############\r\nimport com.google.android.gms.ads.InterstitialAd;\r\nimport com.google.android.gms.ads.AdRequest;\r\nimport com.google.android.gms.ads.MobileAds;\r\nimport com.google.android.gms.ads.AdListener;\r\n###########\r\n\r\nAdd Private:\r\n###########\r\nprivate InterstitialAd mInterstitialAd;\r\n#########\r\n\r\n\r\nOn Manifest Add:\r\n#########\r\n <activity android:configChanges=\"keyboard|keyboardHidden|orientation|screenLayout|screenSize|smallestScreenSize|uiMode\" android:name=\"com.google.android.gms.ads.AdActivity\" android:theme=\"@android:style\/Theme.Translucent\" \/>\r\n\t\t<activity android:name=\"com.google.android.gms.ads.purchase.InAppPurchaseActivity\" android:theme=\"@style\/Theme.IAPTheme\" \/>\r\n\t\t<meta-data android:name=\"com.google.android.gms.version\" android:value=\"@integer\/google_play_services_version\" \/>\r\n\t\t<activity android:exported=\"false\" android:name=\"com.google.android.gms.common.api.GoogleApiActivity\" android:theme=\"@android:style\/Theme.Translucent.NoTitleBar\" \/>\r\n##############\r\n\r\n\r\npermission is some.","androidv4_supported":"1","androidx_supported":"1","category":"Java,Widget","source":"","uid":"0","username":"Unknown"},{"id":"208","title":"AdMob Reward Video","about":"","code":"}\r\npublic com.google.android.gms.ads.reward.RewardedVideoAd mReward;\r\nprivate void nothing() {\r\n\r\n\/\/?\ueb63\u93ad\u13ad\u73ad ???\ueb63 \ue3ad\ueb63?\u23ad\ud3ad\ueb63 ??\u13ad\u33ad\ua3ad ? \uc3ad\ueb63 \uf3ad\ua3ad\u83ad, ?\ueb63?\ueb63 ??\u13ad\u33ad\ua3ad \ue3ad\ueb63?\u23ad\ud3ad\ueb63 OnPostCreate\r\n\r\ncom.google.android.gms.ads.MobileAds.initialize(this, \"AD_UNIT_ID\");\r\nmReward = com.google.android.gms.ads.MobileAds.getRewardedVideoAdInstance(this);\r\nAdRequest adRequest = new AdRequest.Builder().build();\r\nmReward.loadAd(\"AD_UNIT_ID\", adRequest);\r\nmReward.setRewardedVideoAdListener(new com.google.android.gms.ads.reward.RewardedVideoAdListener() {\r\n@Override\r\npublic void onRewarded(com.google.android.gms.ads.reward.RewardItem reward) {\r\n\r\n\/\/if success watch video \r\n\r\n}\r\n@Override\r\npublic void onRewardedVideoAdLeftApplication() {\r\n}\r\n@Override\r\npublic void onRewardedVideoAdClosed() {\r\nAdRequest adRequest = new AdRequest.Builder().build();\r\nmReward.loadAd(\"AD_UNIT_ID\", adRequest);\r\n}\r\n@Override\r\npublic void onRewardedVideoAdFailedToLoad(int errorCode) {\r\nAdRequest adRequest = new AdRequest.Builder().build();\r\nmReward.loadAd(\"AD_UNIT_ID\", adRequest);\r\n}\r\n@Override\r\npublic void onRewardedVideoAdLoaded() {\r\n}\r\n@Override\r\npublic void onRewardedVideoAdOpened() {\r\n}\r\n@Override\r\npublic void onRewardedVideoStarted() {\r\n}\r\n@Override\r\npublic void onRewardedVideoCompleted() {\r\n}\r\n});","androidv4_supported":"1","androidx_supported":"1","category":"Java,Video","source":"","uid":"0","username":"Unknown"},{"id":"249","title":"Admob Video Forward","about":"","code":"AdMob For Sketchware Ads Video\r\n\r\nTutorial Add this on onCreate:\r\n##################\r\nMobileAds.initialize(this, \"ca-app-pub-7530745542139842~3681476673\");\r\nmRewardedVideoAd = MobileAds.getRewardedVideoAdInstance(this);\r\nmRewardedVideoAd.setRewardedVideoAdListener(this);\r\nloadRewardedVideoAd();\r\n}\r\nprivate void loadRewardedVideoAd() {\r\nmRewardedVideoAd.loadAd(\"ca-app-pub-7530745542139842\/2336605413\", new AdRequest.Builder().build());\r\n}\r\n@Override\r\npublic void onRewarded(RewardItem reward) {\r\nToast.makeText(this, \"onRewarded! currency: \" + reward.getType() + \" amount: \" + reward.getAmount(), Toast.LENGTH_SHORT).show();\r\n\/\/Reward the user.\r\n}\r\n@Override\r\npublic void onRewardedVideoAdLeftApplication() {\r\nToast.makeText(this, \"onRewardedVideoAdLeftApplication\",Toast.LENGTH_SHORT).show();\r\n}\r\n@Override\r\npublic void onRewardedVideoAdClosed() {\r\nToast.makeText(this, \"onRewardedVideoAdClosed\", Toast.LENGTH_SHORT).show();\r\nloadRewardedVideoAd();\r\n}\r\n@Override\r\npublic void onRewardedVideoAdFailedToLoad(int errorCode) {\r\nToast.makeText(this, \"onRewardedVideoAdFailedToLoad\", Toast.LENGTH_SHORT).show();\r\n}\r\n@Override\r\npublic void onRewardedVideoAdLoaded() {\r\nToast.makeText(this, \"onRewardedVideoAdLoaded\", Toast.LENGTH_SHORT).show();\r\n}\r\n@Override\r\npublic void onRewardedVideoAdOpened() {\r\nToast.makeText(this, \"onRewardedVideoAdOpened\", Toast.LENGTH_SHORT).show();\r\n}\r\n@Override\r\npublic void onRewardedVideoStarted() {\r\nToast.makeText(this, \"onRewardedVideoStarted\", Toast.LENGTH_SHORT).show();\r\n}\r\n@Override\r\npublic void onRewardedVideoCompleted() {\r\nToast.makeText(this, \"onRewardedVideoCompleted\", Toast.LENGTH_SHORT).show();\r\n}\r\n@Override\r\npublic void onResume() {\r\nmRewardedVideoAd.resume(this);\r\nsuper.onResume();\r\n}\r\n@Override\r\npublic void onPause() {\r\nmRewardedVideoAd.pause(this);\r\nsuper.onPause();\r\n}\r\n@Override\r\npublic void onDestroy() {\r\nshowMessage(\"Success\");\r\nmRewardedVideoAd.destroy(this);\r\nsuper.onDestroy();\r\n}\r\n\r\npublic void nossss() {\r\n###############\r\n\r\nto show This:\r\n########\r\nif (mRewardedVideoAd.isLoaded()) { \r\n mRewardedVideoAd.show(); \r\n} \r\n##########\r\n\r\n\r\nSave And Export this to Aide:\r\nAdd import from aide:\r\n#############\r\nimport com.google.android.gms.ads.AdRequest; \r\nimport com.google.android.gms.ads.MobileAds; \r\nimport com.google.android.gms.ads.reward.RewardedVideoAd; \r\nimport com.google.android.gms.ads.reward.RewardItem; \r\nimport com.google.android.gms.ads.reward.RewardedVideoAdListener; \r\n##########\r\n\r\nChange This:\r\npublic class MainActivity extends Activity\r\n{\r\n\r\nChange to:\r\npublic class MainActivity extends Activity implements RewardedVideoAdListener \r\n{ \r\n\r\n\r\nadd this:\r\nprivate RewardedVideoAd mRewardedVideoAd;\r\n################\r\nAnd Manifest Add:\r\n\t\t<activity android:configChanges=\"keyboard|keyboardHidden|orientation|screenLayout|screenSize|smallestScreenSize|uiMode\" android:name=\"com.google.android.gms.ads.AdActivity\" android:theme=\"@android:style\/Theme.Translucent\" \/> \r\n\t\t<activity android:name=\"com.google.android.gms.ads.purchase.InAppPurchaseActivity\" android:theme=\"@style\/Theme.IAPTheme\" \/> \r\n\t\t<meta-data android:name=\"com.google.android.gms.version\" android:value=\"@integer\/google_play_services_version\" \/> \r\n\t\t<activity android:exported=\"false\" android:name=\"com.google.android.gms.common.api.GoogleApiActivity\" android:theme=\"@android:style\/Theme.Translucent.NoTitleBar\" \/>\r\n################\r\n\r\nThis need permission:\r\nINTERNET\r\nACCESS_NETWORK_STATE","androidv4_supported":"1","androidx_supported":"1","category":"Java,Video","source":"","uid":"0","username":"Unknown"},{"id":"254","title":"AdView","about":"","code":"AdView adView;\r\nadView = (AdView) findViewById(R.id.adView);\r\nadView = new AdView(this);\r\n\t\tadView.setAdUnitId(\"ca-app-pub-****************\/**********\");\r\n\t\tadView.setAdSize(AdSize.BANNER); \/\/\u044e\u13ad\u93ad\ue3ad\u63ad \u23ad\u13ad\uf3ad\uf3ad\u63ad? \r\n\t\tlin_hom.addView(adView);\r\n\t\tAdRequest adRequest = new AdRequest.Builder().build();\r\n\t\tadView.loadAd(adRequest);","androidv4_supported":"1","androidx_supported":"1","category":"Java,Widget","source":"","uid":"0","username":"Unknown"},{"id":"255","title":"AlertDialog","about":"","code":"AlertDialog.Builder builder = new AlertDialog.Builder(MainActivity.this);\r\n\t\t\t\tbuilder.setTitle(\"Title\")\r\n\t\t\t\t\t.setMessage(\"Message\")\r\n\t\t\t\t\t.setCancelable(false)\r\n\t\t\t\t\t.setNegativeButton(\"\u03ce\", new DialogInterface.OnClickListener() {\r\n\t\t\t\t\t\tpublic void onClick(DialogInterface dialog, int id) {\r\n\t\t\t\t\t\t\t\/\/clicked\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\tAlertDialog alert = builder.create();\r\n\t\t\t\talert.show();","androidv4_supported":"1","androidx_supported":"1","category":"Java,Dialog","source":"","uid":"0","username":"Unknown"},{"id":"308","title":"Android version","about":"","code":"release = Build.VERSION.RELEASE;","androidv4_supported":"1","androidx_supported":"1","category":"Java","source":"","uid":"0","username":"Unknown"},{"id":"408","title":"Animation of View","about":"Make a block and add a View item with the name of Variable is view.","code":"\/\/ Modificated by SimosaDev\n\nAnimation makeInAnimation = AnimationUtils.makeInAnimation(getBaseContext(), false);\nmakeInAnimation.setAnimationListener(new Animation.AnimationListener() {\n@Override\npublic void onAnimationEnd(Animation animation) { }\n\n@Override\npublic void onAnimationRepeat(Animation animation) { }\n\n@Override\npublic void onAnimationStart(Animation animation) {\n_view.setVisibility(View.VISIBLE);\n}\n});\n\nAnimation makeOutAnimation = AnimationUtils.makeOutAnimation(getBaseContext(), true);\nmakeOutAnimation.setAnimationListener(new Animation.AnimationListener() {\n@Override\npublic void onAnimationEnd(Animation animation) {\n_view.setVisibility(View.INVISIBLE);\n}\n\n@Override\npublic void onAnimationRepeat(Animation animation) { }\n\n@Override\npublic void onAnimationStart(Animation animation) { }\n});\n\nif (_view.isShown()) {\n_view.startAnimation(makeOutAnimation);\n}\n\nif (!_view.isShown()) {\n_view.startAnimation(makeInAnimation);\n}\n\nScaleAnimation animview = new ScaleAnimation(0,1,0,1);\nanimview.setFillBefore(true);\nanimview.setFillAfter(true);\nanimview.setFillEnabled(true);\nanimview.setDuration(1000);\nanimview.setInterpolator(new OvershootInterpolator());\n_view.startAnimation(animview);\n\n\n\/\/ Make a block and add a View item with the name of Variable is view.\n","androidv4_supported":"1","androidx_supported":"1","category":"Java,Widget","source":"","uid":"0","username":"Unknown"},{"id":"148","title":"Apk - Check Installation","about":"","code":"boolean isAppInstalled = appInstalledOrNot(\"com.besome.sketch\"); \/\/ \u024e\ue3ad ?\u13ad\uc3ad\u63ad?\r\n\r\nif(isAppInstalled) {\r\nshowMessage(\"\u040e?\ua3ad\ud3ad\ueb63\u83ad\u63ad\uf3ad\ua3ad Sketchware ??\u13ad\uf3ad\ueb63\u33ad\ud3ad\u63ad\uf3ad\uf3ad\");\r\n} else {showMessage(\"\u040e?\ua3ad\ud3ad\ueb63\u83ad\u63ad\uf3ad\ua3ad Sketchware \uf3ad \uf3ad\u13ad\ub3ad\u63ad\uf3ad\");}}\r\n\r\nprivate boolean appInstalledOrNot(String uri) { android.content.pm.PackageManager pm = getPackageManager(); try { pm.getPackageInfo(uri, android.content.pm.PackageManager.GET_ACTIVITIES); return true; } catch (android.content.pm.PackageManager.NameNotFoundException e) { } return false;","androidv4_supported":"1","androidx_supported":"1","category":"Java","source":"","uid":"0","username":"Unknown"},{"id":"149","title":"Apk - Code and Build Number","about":"","code":"String versionName = \"null\";\r\nint versionCode = -1;\r\ntry {\r\nandroid.content.pm.PackageInfo packageInfo = MainActivity.this.getPackageManager().getPackageInfo(getPackageName(), 0);\r\n\r\nversionName = packageInfo.versionName;\r\n\r\nversionCode = packageInfo.versionCode;\r\n\r\n} catch (android.content.pm.PackageManager.NameNotFoundException e) {\r\ne.printStackTrace();\r\n}\r\n\r\n\r\nTextView textViewVersionInfo = (TextView) findViewById(R.id.textview1);\r\n\r\ntextViewVersionInfo.setText(String.format(\"UTF-8\", versionName, versionCode));","androidv4_supported":"1","androidx_supported":"1","category":"Java","source":"","uid":"0","username":"Unknown"},{"id":"147","title":"Apk - Share File","about":"","code":"String apk = \"\";\r\nString uri = (\"com.my.project\");\r\n\r\ntry {\r\nandroid.content.pm.PackageInfo pi = getPackageManager().getPackageInfo(uri, android.content.pm.PackageManager.GET_ACTIVITIES);\r\n\r\napk = pi.applicationInfo.publicSourceDir;\r\n} catch (Exception e) {\r\nshowMessage(e.toString());\r\n}\r\nIntent iten = new Intent(Intent.ACTION_SEND);\r\niten.setType(\"*\/*\");\r\niten.putExtra(Intent.EXTRA_STREAM, Uri.fromFile(new java.io.File(apk)));\r\n\r\nstartActivity(Intent.createChooser(iten, \"\u03ce???\u13ad\u33ad\ua3ad? APK\"));","androidv4_supported":"1","androidx_supported":"1","category":"Java","source":"","uid":"0","username":"Unknown"},{"id":"306","title":"App code & Build number","about":"","code":"\/\/ \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043d\u0430 \u044d\u043a\u0440\u0430\u043d textview1\r\n\r\nString versionName = \"null\";\r\nint versionCode = -1;\r\ntry {\r\nandroid.content.pm.PackageInfo packageInfo = MainActivity.this.getPackageManager().getPackageInfo(getPackageName(), 0);\r\n\r\nversionName = packageInfo.versionName;\r\n\r\nversionCode = packageInfo.versionCode;\r\n\r\n} catch (android.content.pm.PackageManager.NameNotFoundException e) {\r\ne.printStackTrace();\r\n}\r\n\r\n\r\nTextView textViewVersionInfo = (TextView) findViewById(R.id.textview1);\r\n\r\ntextViewVersionInfo.setText(String.format(\"\u041d\u043e\u043c\u0435\u0440 \u0441\u0431\u043e\u0440\u043a\u0438: %s \u041a\u043e\u0434 \u0441\u0431\u043e\u0440\u043a\u0438:%d\", versionName, versionCode));","androidv4_supported":"1","androidx_supported":"1","category":"Java","source":"","uid":"0","username":"Unknown"},{"id":"444","title":"AppBarLayout (AndroidX)","about":"Hide AppBar while scrolling down","code":"com.google.android.material.appbar.AppBarLayout.LayoutParams params = (com.google.android.material.appbar.AppBarLayout.LayoutParams)_toolbar.getLayoutParams();\n\nparams.setScrollFlags(com.google.android.material.appbar.AppBarLayout.LayoutParams.SCROLL_FLAG_SCROLL | com.google.android.material.appbar.AppBarLayout.LayoutParams.SCROLL_FLAG_ENTER_ALWAYS | com.google.android.material.appbar.AppBarLayout.LayoutParams.SCROLL_FLAG_SNAP);","androidv4_supported":"1","androidx_supported":"1","category":"Java","source":"","uid":"0","username":"Unknown"},{"id":"16","title":"AppList with icon(LAUNCH)","about":"","code":"Intent startupIntent = new Intent(Intent.ACTION_MAIN); \t\tstartupIntent.addCategory(Intent.CATEGORY_LAUNCHER); \t\tfinal android.content.pm.PackageManager pm = getPackageManager(); \t\tList<android.content.pm.ResolveInfo> activities = pm.queryIntentActivities(startupIntent,0); \t\tCollections.sort(activities, new Comparator<android.content.pm.ResolveInfo>() { \t\t\t\tpublic int compare(android.content.pm.ResolveInfo a, android.content.pm.ResolveInfo b) { \t\t\t\t\tandroid.content.pm.PackageManager pm = getPackageManager(); \t\t\t\t\treturn String.CASE_INSENSITIVE_ORDER.compare( \t\t\t\t\t\ta.loadLabel(pm).toString(), \t\t\t\t\t\tb.loadLabel(pm).toString()); \t\t\t\t} \t\t\t}); \t\tArrayAdapter<android.content.pm.ResolveInfo> adapter = new ArrayAdapter<android.content.pm.ResolveInfo>( \t\t\tthis, android.R.layout.simple_list_item_1, activities) { \t\t\tpublic View getView(int pos, View convertView, ViewGroup parent) { TextView tv = new TextView(MainActivity.this); \t\t\t\tandroid.content.pm.ResolveInfo ri = getItem(pos); \t\t\ttv.setText(ri.loadLabel(pm)); \tLinearLayout lin = new LinearLayout(MainActivity.this);ImageView iv = new ImageView(MainActivity.this);iv.setImageDrawable(ri.loadIcon(pm));lin.addView(iv);lin.addView(tv);tv.setGravity(Gravity.CENTER_VERTICAL);tv.setPadding(16,0,0,0);tv.setTextSize(16);tv.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT,LinearLayout.LayoutParams.MATCH_PARENT ));LinearLayout.LayoutParams p =\tnew LinearLayout.LayoutParams(LinearLayout.LayoutParams.WRAP_CONTENT,LinearLayout.LayoutParams.MATCH_PARENT);p.width = 70;p.height = 70;p.bottomMargin = 4;p.topMargin = 4;iv.setLayoutParams(p);lin.setPadding(6,6,6,6);return lin; \t\t\t} \t\t}; \t\tlistview1.setAdapter(adapter); \t\t \t\tlistview1.setOnItemClickListener(new AdapterView.OnItemClickListener() { \t\t\t\t@Override \t\t\t\tpublic void onItemClick(AdapterView adapter, View v, int position, long id) \t\t\t\t{ \t\t\t\t\tandroid.content.pm.ResolveInfo resolveInfo = (android.content.pm.ResolveInfo)adapter.getItemAtPosition(position); \t\t\t\t\tandroid.content.pm.ActivityInfo activityInfo = resolveInfo.activityInfo; \t\t\t\t\tif (activityInfo == null) return; \t\t\t\t\tIntent i = new Intent(Intent.ACTION_MAIN); \t\t\t\t\ti.setClassName(activityInfo.applicationInfo.packageName, activityInfo.name); \t\t\t\t\tstartActivity(i); \t\t\t\t} \t\t\t \t\t});;","androidv4_supported":"1","androidx_supported":"1","category":"Java,List","source":"","uid":"0","username":"Unknown"},{"id":"106","title":"Arrow Download Animation","about":"","code":"final ArrowDownloadButton txt = new ArrowDownloadButton(MainActivity.this);\r\ntxt.setLayoutParams(new LinearLayout.LayoutParams(100, 100));\r\nlinear1.addView(txt);\r\ntxt.setOnClickListener(new View.OnClickListener() {\r\n @Override\r\n public void onClick(View v) {\r\n if ((count % 2) == 0) {\r\n txt.startAnimating();\r\n Timer timer = new Timer();\r\n timer.schedule(new TimerTask() {\r\n @Override\r\n public void run() {\r\n runOnUiThread(new Runnable() {\r\n @Override\r\n public void run() {\r\n progress = progress + 1;\r\n txt.setProgress(progress);\r\n }\r\n });\r\n }\r\n }, 800, 20);\r\n } else {\r\n txt.reset();\r\n }\r\n count++;\r\n }\r\n });\r\n }\r\n private int count;\r\n private int progress;\r\n public void noth() {","androidv4_supported":"1","androidx_supported":"1","category":"Java,Internet","source":"","uid":"0","username":"Unknown"},{"id":"373","title":"ASE (Advanced Standard Encrypted)","about":"Add add source directly and paste this code in any method after all blocks.","code":"\/*Create \" Encrypted&Decryped \" More Block and Put Below Code Inside ASD Block*\/\r\n\r\n\r\n\r\n}\r\nprivate javax.crypto.SecretKey generateKey(String pwd) throws Exception {\r\n\r\nfinal java.security.MessageDigest digest = java.security.MessageDigest.getInstance(\"SHA-256\");\r\n\r\nbyte[] b = pwd.getBytes(\"UTF-8\");\r\n\r\ndigest.update(b,0,b.length);\r\n\r\nbyte[] key = digest.digest();\r\n\r\njavax.crypto.spec.SecretKeySpec sec = new javax.crypto.spec.SecretKeySpec(key, \"AES\");\r\n\r\nreturn sec;\r\n\r\n\r\n\/*Now Create \" Encrypted \" More Block With below given 3 string variable \r\n1) \"string\" \r\n2)\"key\"\r\n3)\"encrypted \"\r\nAnd Put Below Code Inside ASD Block *\/\r\n\r\n\r\ntry {\r\njavax.crypto.SecretKey key = generateKey(_key); \r\njavax.crypto.Cipher c = javax.crypto.Cipher.getInstance(\"AES\"); \r\nc.init(javax.crypto.Cipher.ENCRYPT_MODE, key); \r\nbyte[] encVal = c.doFinal(_string.getBytes());\r\nencrypted = android.util.Base64.encodeToString(encVal,android.util.Base64.DEFAULT);\r\n\r\n} catch (Exception ex) {\r\nshowMessage(String.valueOf(ex));\r\n}\r\n\r\n\r\n\/*Now Create \" Decrypted \" More Block With below given 3 string variable \r\n1) \"string\" \r\n2)\"key\"\r\n3)\"decrypted \"\r\nAnd Put Below Code Inside ASD Block *\/\r\n\r\n\r\n\r\ntry {\r\njavax.crypto.spec.SecretKeySpec key = (javax.crypto.spec.SecretKeySpec) generateKey(_key);\r\n\r\njavax.crypto.Cipher c = javax.crypto.Cipher.getInstance(\"AES\");\r\nc.init(javax.crypto.Cipher.DECRYPT_MODE,key); \r\nbyte[] decode = android.util.Base64.decode(_string,android.util.Base64.DEFAULT); \r\nbyte[] decval = c.doFinal(decode);\r\ndecrypted = new String(decval); \r\n\r\n} catch (Exception ex) {\r\n\r\n}","androidv4_supported":"1","androidx_supported":"1","category":"Java","source":"","uid":"0","username":"Unknown"},{"id":"487","title":"AsyncTask - Download Image","about":"Uses AsyncTask to download image from the internet. You can modify it to download a file too. (Place the code in end of onCreate or end of moreblock)\r\nUsage might be: new GetImageFromUrl().execute(\"https:\/\/example.com\/url.png\");","code":"}\r\nBitmap bitmap;\r\n \r\npublic class GetImageFromUrl extends android.os.AsyncTask<String, Void, Bitmap>{\r\n View view;\r\n public GetImageFromUrl(View v){\r\n this.view = v;\r\n }\r\n \r\n\t @Override\r\n\tprotected android.graphics.Bitmap doInBackground(String... url) {\r\n\t\tString stringUrl = url[0];\r\n\t\tbitmap = null;\r\n\t\t\/\/java.io.InputStream inputStream;\r\n\t\ttry {\r\n\t\t\t\/\/inputStream = new java.net.URL(stringUrl).openStream();\r\n\t\t\tbitmap = android.graphics.BitmapFactory.decodeStream ((java.io.InputStream)new java.net.URL(url[0]).getContent());\r\n\t\t} catch (java.io.IOException e) {\r\n\t\t\t\r\n\t\t}\r\n\t\treturn bitmap;\r\n\t}\r\n \r\n\t @Override\r\n\tprotected void onPostExecute(android.graphics.Bitmap bitmap){\r\n\t\tsuper.onPostExecute(bitmap);\r\n\t\tif (bitmap != null){\r\n\t\t\tandroid.graphics.drawable.BitmapDrawable bd = new android.graphics.drawable.BitmapDrawable(bitmap);\r\n\t\t\t\/\/imageview1.setImageDrawable(bd);\r\n\r\n\t\t\tview.setBackground(new android.graphics.drawable.BitmapDrawable(bitmap));\r\n\t\t}\r\n\t}\r\n}","androidv4_supported":"1","androidx_supported":"1","category":"Java,Internet","source":"Submitted by TheRandomCrafter83","uid":"0","username":"Unknown"},{"id":"497","title":"AsyncTask - Sample help","about":"This is untested code for explaining how it works.","code":"\r\n\/** PLACE THIS CODE IN END OF OnCreate OR A MOREBLOCK *\/\r\n\/** THIS IS UNTESTED CODE FOR STUDY PURPOSE, DONT USE IT AS IT IS *\/\r\n}\r\nprivate class myBigTask extends AsyncTask<String, Integer, String> {\r\n@Override\r\nprotected void onPreExecute() {\r\n super.onPreExecute();\r\n \/\/codes that you want to do before your heavy task\r\n }\r\n@Override\r\nprotected String doInBackground(String... value) {\r\n\/\/your big task code here\r\n while(boolean){ \/\/or any loop\r\n \/\/here you tell what is the progress of big task, you can send publishProgress(% of progress done) anytime\r\n publishProgress((int) progress);\r\n }\r\n if(jobSuccessful){\r\n output = \"Success\";\r\n } else{\r\n output = \"error\";\r\n }\r\n\r\n return output;\r\n \/\/you are sending output to onPostExecute\r\n}\r\n@Override\r\nprotected void onProgressUpdate(Integer... progress) {\r\nsuper.onProgressUpdate(progress);\r\n\/\/when you did publishProgress(int) in doInBackground, it will perform this function\r\n txt_progress.setText((int)progress); \/\/untested\r\n}\r\n@Override\r\nprotected void onPostExecute(String returnedOutput) {\r\n if(returnedOutput == \"Success\") {\r\n showMessage(\"Successfully task completed\");\r\n } else {\r\n showMessage(\"Error occurred\");\r\n }\r\n}\r\n\r\n\/** NOW CALL THIS LINE WHENEVER YOU HAVE TO PERFORM ABOVE TASK *\/\r\nnew myBigTask().execute(value);\r\n\r\n\/** An example of this code is available at https:\/\/codehive.sketchub.in\/view.php?id=23 *\/","androidv4_supported":"1","androidx_supported":"1","category":"Java","source":"","uid":"0","username":"Unknown"},{"id":"17","title":"AsynkTask Example","about":"about in comments...","code":"private class AsyncTaskEx extends AsyncTask<Void, Void, Void> {\r\n\r\n \/** The system calls this to perform work in a worker thread and\r\n * delivers it the parameters given to AsyncTask.execute() *\/\r\n @Override\r\n protected Void doInBackground(Void... arg0) {\r\n StartTimer();\/\/call your method here it will run in background\r\n return null;\r\n }\r\n\r\n \/** The system calls this to perform work in the UI thread and delivers\r\n * the result from doInBackground() *\/\r\n @Override\r\n protected void onPostExecute(Void result) {\r\n \/\/Write some code you want to execute on UI after doInBackground() completes\r\n return ;\r\n }\r\n\r\n @Override\r\n protected void onPreExecute() {\r\n \/\/Write some code you want to execute on UI before doInBackground() starts\r\n return ;\r\n }\r\n}\r\n\r\n\r\n\/\/Write this class inside your Activity and call where you want execute your method\r\n\r\nnew AsyncTaskEx().execute();","androidv4_supported":"1","androidx_supported":"1","category":"Java","source":"","uid":"0","username":"Unknown"},{"id":"280","title":"Autocomplete Text","about":"","code":"\/\/Create New\r\nfinal AutoCompleteTextView url = new AutoCompleteTextView(MainActivity.this);\r\n\r\n\/\/Layout set Weight 1\r\nurl.setLayoutParams(new LinearLayout.LayoutParams(android.widget.LinearLayout.LayoutParams.WRAP_CONTENT, 35, 1.0f));\r\n\r\n\/\/Padding\r\nurl.setPadding(8,8,8,8);\r\n\r\n\/\/Size\r\nurl.setTextSize(12);\r\n\r\n\/\/Color\r\nurl.setTextColor(Color.parseColor(\"#000000\"));\r\n\r\n\/\/Hint\r\nurl.setHint(\"Write\");\r\n\r\n\/\/Hint Color\r\nurl.setHintTextColor(Color.parseColor(\"#607D8B\"));\r\n\r\n\/\/Set Bg Transparent\r\nurl.setBackgroundColor(Color.TRANSPARENT);\r\n\r\n\/\/ImeOption\r\nurl.setImeOptions(android.view.inputmethod.EditorInfo.IME_ACTION_GO);\r\n\r\n\/\/View By pos 0\r\nlinear2.addView(url, 0);\r\n\r\n\r\nArrayAdapter<String> adapterAutoCmplt = new ArrayAdapter<String>(this, android.R.layout.simple_list_item_1, autoCmplt);\r\nurl.setAdapter(adapterAutoCmplt);\r\n\r\n\/\/Make List String With Name autoCmplt\r\n\/\/and add to string what you want","androidv4_supported":"1","androidx_supported":"1","category":"Java","source":"","uid":"0","username":"Unknown"},{"id":"1","title":"Background (HEX COLOR)","about":"Edit HEX color (#000000) on your HEX color.","code":"linear1.setBackgroundColor(Color.parseColor(\"#000000\"));","androidv4_supported":"1","androidx_supported":"1","category":"Java","source":"","uid":"0","username":"Unknown"},{"id":"107","title":"Battery Health","about":"","code":"\/\/onCreate\r\nIntentFilter iFilter = new IntentFilter(Intent.ACTION_BATTERY_CHANGED);\r\ngetApplicationContext().registerReceiver(mBroadcastReceiver,iFilter);\r\n\r\n\r\n\r\nprivate BroadcastReceiver mBroadcastReceiver = new BroadcastReceiver() {\r\n@Override\r\npublic void onReceive(Context context, Intent intent) {\r\nToast.makeText(getApplicationContext(), \"Received\", Toast.LENGTH_SHORT).show();\r\nint health = intent.getIntExtra(BatteryManager.EXTRA_HEALTH,0);\r\nString healthString = \"\";\r\n\/\/ Determine the battery health from return integer value\r\nif(health == BatteryManager.BATTERY_HEALTH_COLD){\r\n healthString = \"COLD\";\r\n}else if (health == BatteryManager.BATTERY_HEALTH_DEAD){\r\n healthString = \"DEAD\";\r\n}else if (health == BatteryManager.BATTERY_HEALTH_GOOD){\r\n healthString = \"GOOD\";\r\n}else if (health == BatteryManager.BATTERY_HEALTH_OVERHEAT){\r\n healthString = \"OVER HEAT\";\r\n}else if (health == BatteryManager.BATTERY_HEALTH_OVER_VOLTAGE){\r\n healthString = \"OVER VOLTAGE\";\r\n}else if(health == BatteryManager.BATTERY_HEALTH_UNKNOWN){\r\n healthString = \"UNKNOWN\";\r\n}else if(health == BatteryManager.BATTERY_HEALTH_UNSPECIFIED_FAILURE){\r\n healthString = \"UNSPECIFIED FAILURE\";\r\n}\r\ntextview1.setText(\"Battery Health : \" + healthString);\r\n}\r\n};","androidv4_supported":"1","androidx_supported":"1","category":"Java","source":"","uid":"0","username":"Unknown"},{"id":"108","title":"Battery Level","about":"","code":"BatteryManager bm = (BatteryManager)getSystemService(BATTERY_SERVICE);\r\nint batLevel = bm.getIntProperty(BatteryManager.BATTERY_PROPERTY_CAPACITY);\r\ntextview1.setText(Integer.toString(batLevel));","androidv4_supported":"1","androidx_supported":"1","category":"Java","source":"","uid":"0","username":"Unknown"},{"id":"109","title":"Battery Temperature","about":"","code":"\/\/OnCreate\r\nIntentFilter iFilter = new IntentFilter(Intent.ACTION_BATTERY_CHANGED);\r\ngetApplicationContext().registerReceiver(mBroadcastReceiver,iFilter);\r\n\r\n\r\n\r\nprivate BroadcastReceiver mBroadcastReceiver = new BroadcastReceiver() {\r\n@Override\r\npublic void onReceive(Context context, Intent intent) {\r\nfloat temperature = (float)(intent.getIntExtra(BatteryManager.EXTRA_TEMPERATURE,0))\/10;\r\ntextview1.setText(\"Battery Temperature\r\n\" + temperature +\" \"+ (char) 0x00B0 +\"C\");\r\n}\r\n};","androidv4_supported":"1","androidx_supported":"1","category":"Java","source":"","uid":"0","username":"Unknown"},{"id":"110","title":"Battery Voltage","about":"","code":"\/\/InCreate\r\nIntentFilter iFilter = new IntentFilter(Intent.ACTION_BATTERY_CHANGED);\r\ngetApplicationContext().registerReceiver(mBroadcastReceiver,iFilter);\r\n\r\n\r\nprivate BroadcastReceiver mBroadcastReceiver = new BroadcastReceiver() {\r\n@Override\r\npublic void onReceive(Context context, Intent intent) {\r\nToast.makeText(getApplicationContext(), \"Received\", Toast.LENGTH_SHORT).show();\r\nint voltage = intent.getIntExtra(BatteryManager.EXTRA_VOLTAGE,0);\r\ndouble volt = voltage * 0.0\r\njava.text.DecimalFormat newFormat = new java.text.DecimalFormat(\"#.#\");\r\ndouble oneDecimalVolt = Double.valueOf(newFormat.format(volt));\r\ntextview1.setText(\"Battery Voltage\");\r\ntextview1.setText(textview1.getText() +\"\r\nMillivolts : \" + voltage);\r\ntextview1.setText(textview1.getText() + \"\r\nVolt : \" + oneDecimalVolt);\r\n}\r\n};","androidv4_supported":"1","androidx_supported":"1","category":"Java","source":"","uid":"0","username":"Unknown"},{"id":"111","title":"BitMap Compression","about":"","code":"android.graphics.drawable.Drawable drawable = getDrawable(R.drawable.image);\r\nBitmap bitmap = ((android.graphics.drawable.BitmapDrawable)drawable).getBitmap();\r\n\/\/Source\r\nimageview1.setImageBitmap(bitmap);\r\n\r\njava.io.ByteArrayOutputStream stream = new java.io.ByteArrayOutputStream();\r\nbitmap.compress(Bitmap.CompressFormat.JPEG,50,stream);\r\nbyte[] byteArray = stream.toByteArray();\r\nBitmap compressedBitmap = BitmapFactory.decodeByteArray(byteArray,0,byteArray.length);\r\n\/\/Result 50% Quality\r\nimageview2.setImageBitmap(compressedBitmap);","androidv4_supported":"1","androidx_supported":"1","category":"Java","source":"","uid":"0","username":"Unknown"},{"id":"112","title":"BitMap Shader","about":"","code":"Bitmap bitmap = BitmapFactory.decodeResource(getResources(),R.drawable.pattern);\r\nShader shader = new BitmapShader(bitmap, Shader.TileMode.REPEAT, Shader.TileMode.REPEAT);\r\ntextview1.setLayerType(View.LAYER_TYPE_SOFTWARE, null);\r\ntextview1.getPaint().setShader(shader);","androidv4_supported":"1","androidx_supported":"1","category":"Java","source":"","uid":"0","username":"Unknown"},{"id":"113","title":"BitMap To String","about":"","code":"\/\/Bitmap to String:\r\npublic String BitMapToString(Bitmap bitmap){\r\n java.io.ByteArrayOutputStream baos=new java.io.ByteArrayOutputStream();\r\n bitmap.compress(Bitmap.CompressFormat.PNG,100, baos);\r\n byte [] arr=baos.toByteArray();\r\n String result=Base64.encodeToString(arr, Base64.DEFAULT);\r\n return result;\r\n}\r\n\r\n\r\n\/\/String to Bitmap:\r\npublic Bitmap StringToBitMap(String image){\r\n try{\r\n byte [] encodeByte=Base64.decode(image,Base64.DEFAULT);\r\n Bitmap bitmap=BitmapFactory.decodeByteArray(encodeByte, 0, encodeByte.length);\r\n return bitmap;\r\n }catch(Exception e){\r\n e.getMessage();\r\n return null;\r\n }\r\n }","androidv4_supported":"1","androidx_supported":"1","category":"Java","source":"","uid":"0","username":"Unknown"},{"id":"114","title":"Block Capturing","about":"","code":"getWindow().setFlags(WindowManager.LayoutParams.FLAG_SECURE, WindowManager.LayoutParams.FLAG_SECURE);","androidv4_supported":"1","androidx_supported":"1","category":"Java","source":"","uid":"0","username":"Unknown"},{"id":"120","title":"Bluetooth Manager","about":"","code":"\/\/Bluetooth On\r\nfinal android.bluetooth.BluetoothAdapter bluetoothAdapter = android.bluetooth.BluetoothAdapter.getDefaultAdapter();\r\nif (bluetoothAdapter != null) {\r\n showMessage(\"This device support bluetooth\");\r\n} else {\r\n showMessage(\"This device not supported bluetooth\");\r\n}\r\n\r\n\r\nif (!bluetoothAdapter.isEnabled()) {\r\nIntent turnOn = new Intent((android.bluetooth.BluetoothAdapter.ACTION_REQUEST_ENABLE));\r\nstartActivityForResult(turnOn, 0);\r\nshowMessage(\"Turned On\");\r\n} else {\r\nshowMessage(\"Already On\");\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\/\/Bluetooth OFF\r\nfinal android.bluetooth.BluetoothAdapter bluetoothAdapter = android.bluetooth.BluetoothAdapter.getDefaultAdapter();\r\nif (bluetoothAdapter != null) {\r\n showMessage(\"This device support bluetooth\");\r\n} else {\r\n showMessage(\"This device not supported bluetooth\");\r\n}\r\n\r\n\r\nbluetoothAdapter.disable();\r\nshowMessage(\"OFF\");\r\n\r\n\r\n\r\n\r\n\r\n\r\n\/\/Make Bluetooth Visible\r\nfinal android.bluetooth.BluetoothAdapter bluetoothAdapter = android.bluetooth.BluetoothAdapter.getDefaultAdapter();\r\nif (bluetoothAdapter != null) {\r\n showMessage(\"This device support bluetooth\");\r\n} else {\r\n showMessage(\"This device not supported bluetooth\");\r\n}\r\n\r\n\r\nIntent getVisible = new Intent(android.bluetooth.BluetoothAdapter.ACTION_REQUEST_DISCOVERABLE); startActivityForResult(getVisible, 0);\r\n\r\n}\r\n\r\nprivate static final int BT_VISIBLE_ENABLE = 13;\r\n\r\nprivate void makeBTDiscoverable() {\r\nIntent discoverableIntent = new Intent(android.bluetooth.BluetoothAdapter.ACTION_REQUEST_DISCOVERABLE);\r\ndiscoverableIntent.putExtra(android.bluetooth.BluetoothAdapter.EXTRA_DISCOVERABLE_DURATION, 300); startActivityForResult(discoverableIntent, BT_VISIBLE_ENABLE);\r\n}\r\n\r\npublic void onActivityResult(int requestCode, int resultCode, Intent data) {\r\nif (requestCode == BT_VISIBLE_ENABLE) {\r\nshowMessage(\"The device has been made available successfully\");\r\n} else {\r\nshowMessage(\"An error was encountered while making the device discoverable!\");\r\n}\r\n\r\n\r\n\r\n\/\/ListBluetooth Button\r\nfinal android.bluetooth.BluetoothAdapter bluetoothAdapter = android.bluetooth.BluetoothAdapter.getDefaultAdapter();\r\nfinal Set<android.bluetooth.BluetoothDevice> pairedDevices = bluetoothAdapter.getBondedDevices();\r\n\r\nfinal ArrayList list = new ArrayList();\r\nfor (android.bluetooth.BluetoothDevice bt : pairedDevices)\r\nlist.add(bt.getName()); \r\nshowMessage(\"Showing Paired Devices\");\r\nfinal ArrayAdapter<android.content.pm.ResolveInfo> adapter = new ArrayAdapter<android.content.pm.ResolveInfo>(MainActivity.this, android.R.layout.simple_list_item_1, list);\r\nlistview1.setAdapter(adapter);\r\nlistview1.refreshDrawableState();\r\n\r\n\r\n\r\n\r\n\/* add permission\r\n<uses-permission android:name=\"android.permission.BLUETOOTH\" \/>\r\n<uses-permission android:name=\"android.permission.BLUETOOTH_ADMIN\" \/>\r\n*\/","androidv4_supported":"1","androidx_supported":"1","category":"Java,Bluetooth","source":"","uid":"0","username":"Unknown"},{"id":"380","title":"Bottom Navigation","about":"Add add source directly and paste this code","code":"com.google.android.material.bottomnavigation.BottomNavigationView btm= new com.google.android.material.bottomnavigation.BottomNavigationView(MainActivity.this);\nbtm.setLayoutParams(new ViewGroup.LayoutParams( ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));\n\n\n\nlinear1.addView(btm);\nlinear1.setElevation(16);\n\nMenu menu = btm.getMenu();\n\nfinal int A = 0;\nfinal int B = 1;\nfinal int C = 2;\n\n \n\nmenu.add(Menu.NONE, A, Menu.NONE, \"Home\").setIcon(R.drawable.ic_home_grey);\n\nmenu.add(Menu.NONE, B, Menu.NONE, \"Favorites\").setIcon(R.drawable.ic_favorite_grey);\n\nmenu.add(Menu.NONE, C, Menu.NONE, \"Profile\").setIcon(R.drawable.ic_person_grey);\nbtm.setOnNavigationItemSelectedListener(new com.google.android.material.bottomnavigation.BottomNavigationView.OnNavigationItemSelectedListener() { @Override public boolean onNavigationItemSelected(final MenuItem item) {\nswitch (item.getItemId()){ \ncase A: \nshowMessage(\"item1\");\nbreak;\ncase B:\n\nshowMessage(\"item2\");\n\nbreak; \ncase C:\n\nshowMessage(\"item3\");\n \nbreak; \n\n} return true; } });","androidv4_supported":"1","androidx_supported":"1","category":"Java","source":"","uid":"0","username":"Unknown"},{"id":"256","title":"BottomSheet","about":"","code":"LinearLayout llBottomSheet = (LinearLayout) findViewById(R.id.bottom_sheet); \r\n\/\/ \uf3ad\u13ad???\ueb63\ub3ad\uc3ad ?\ueb63\u33ad\u63ad\u63ad\uf3ad\ua3ad \uf3ad\ua3ad\u83ad\uf3ad\u63ad\u43ad \uc3ad?\u13ad\uf3ad\r\n\tBottomSheetBehavior bottomSheetBehavior = BottomSheetBehavior.from(llBottomSheet); \r\n\/\/ \uf3ad\u13ad???\ueb63\ub3ad\uc3ad ?\ueb63??\ueb64\uf3ad\ua3ad \uf3ad\ua3ad\u83ad\uf3ad\u63ad\u43ad \uc3ad?\u13ad\uf3ad \r\n\tbottomSheetBehavior.setState(BottomSheetBehavior.STATE_COLLAPSED); \r\n\tbottomSheetBehavior.setState(BottomSheetBehavior.STATE_EXPANDED); \r\n\tbottomSheetBehavior.setState(BottomSheetBehavior.STATE_HIDDEN); \r\n\/\/ \uf3ad\u13ad???\ueb63\ub3ad\uc3ad \ue3ad\u13ad\uc3ad?\ua3ad\ue3ad\u13ad\ud3ad\uf3ad\ueb63 \u33ad?\ueb63? \r\n\tbottomSheetBehavior.setPeekHeight(340); \r\n\/\/ \uf3ad\u13ad???\ueb63\ub3ad\uc3ad \u33ad\ueb63\u93ad\ue3ad\ueb63\u83ad\uf3ad\ueb63?? ?\uc3ad?? \ud3ad\u63ad\ue3ad\u63ad\uf3ad ?? ?\u33ad\u13ad\ub3ad? \u33ad\uf3ad\ua3ad \r\n\tbottomSheetBehavior.setHideable(false); \r\n\/\/ \uf3ad\u13ad???\ueb63\ub3ad\uc3ad \uc3ad\ueb63\ud3ad\u23ad\uc3ad\ueb63 ?? \ua3ad\u93ad\ue3ad\u63ad\uf3ad\u63ad\uf3ad\ua3ad \r\n\tbottomSheetBehavior.setBottomSheetCallback(new BottomSheetBehavior.BottomSheetCallback() { \r\n@Override public void onStateChanged(@NonNull View bottomSheet, int newState) { \r\n\r\n} \r\n@Override public void onSlide(@NonNull View bottomSheet, float slideOffset) {\r\n\r\n } \r\n});","androidv4_supported":"1","androidx_supported":"1","category":"Java","source":"","uid":"0","username":"Unknown"},{"id":"257","title":"BottomSheetDialog","about":"","code":"final BottomSheetDialog font_txt = new BottomSheetDialog(XmlEditor.this);\r\n\t\t\t\tView infla = getLayoutInflater().inflate(R.layout.dialog_text_size, null); \r\n\t\t\t\tfont_txt.setContentView(infla); \r\nfont_txt.show();","androidv4_supported":"1","androidx_supported":"1","category":"Java,Dialog","source":"","uid":"0","username":"Unknown"},{"id":"446","title":"BottomSheetDialog (AndroidX)","about":"","code":"final\ncom.google.android.material.bottomsheet.BottomSheetDialog bs_base = new com.google.android.material.bottomsheet.BottomSheetDialog(MainActivity.this);\n\nView layBase = getLayoutInflater().inflate(R.layout.cust, null);\n\nbs_base.setContentView(layBase);\n\nbs_base.show();\n\nButton pay_bs = (Button)layBase.findViewById(R.id.button1);\n\npay_bs.setOnClickListener(new View.OnClickListener() {\npublic void onClick(View v) {\nbs_base.dismiss();\n\n\nshowMessage(\"Payment Done\");\n\n}\n\n});","androidv4_supported":"1","androidx_supported":"1","category":"Java","source":"","uid":"0","username":"Unknown"},{"id":"409","title":"Brightness Display","about":"Brightness display with float number value","code":"\/\/ Modificated by SimosaDev\n\/\/ Brightness of num value is 0.0 ~ 1.0\n\nWindowManager.LayoutParams lay = getWindow().getAttributes();\n\nlay.screenBrightness = (float)_num;\ngetWindow().setAttributes(lay);\n","androidv4_supported":"1","androidx_supported":"1","category":"Java","source":"","uid":"0","username":"Unknown"},{"id":"482","title":"Button - Disable Capitals","about":"By default, text on buttons are in Capital letters, If you need to disable button capitals then try out this code.","code":"yourbutton.setTransformationMethod(null);","androidv4_supported":"1","androidx_supported":"1","category":"Java,UI","source":"https:\/\/stackoverflow.com\/a\/26959656","uid":"0","username":"Unknown"},{"id":"379","title":"Button Background","about":"Create variable color.","code":"color = \"INSERT HERE A HEX COLOR\";\r\nbutton1.getBackground().setColorFilter(Color.parseColor(color), PorterDuff.Mode.MULTIPLY);","androidv4_supported":"1","androidx_supported":"1","category":"Java,Widget","source":"","uid":"0","username":"Unknown"},{"id":"48","title":"Button Color","about":"","code":"button1.getBackground().setColorFilter(Color.parseColor(\"#FAFAFA\"), PorterDuff.Mode.MULTIPLY);","androidv4_supported":"1","androidx_supported":"1","category":"Java,Widget","source":"","uid":"0","username":"Unknown"},{"id":"2","title":"Button ColorStateList","about":"Replace button1 on your widget name","code":"android.graphics.drawable.GradientDrawable bg = new android.graphics.drawable.GradientDrawable();\n\nbg.setColor(new android.content.res.ColorStateList(new int[][] {{-android.R.attr.state_pressed}, {android.R.attr.state_pressed}},new int[] {Color.parseColor(\"#901020\"), Color.parseColor(\"#40109020\")}));\nbg.setShape(1);\nbg.setCornerRadius(10);\nbg.setStroke(2, new android.content.res.ColorStateList(new int[][] {{-android.R.attr.state_pressed}, {android.R.attr.state_pressed}}, new int[] {Color.parseColor(\"#505050\"), Color.parseColor(\"#502010\")}));\n\nbutton1.setBackground(bg);","androidv4_supported":"1","androidx_supported":"1","category":"Java,Widget","source":"","uid":"0","username":"Unknown"},{"id":"46","title":"Button On Click","about":"","code":"button1.setOnClickListener(new View.OnClickListener() {\r\npublic void onClick(View v) {\r\n\/\/ your code area\r\n}\r\n});","androidv4_supported":"1","androidx_supported":"1","category":"Java,Widget","source":"","uid":"0","username":"Unknown"},{"id":"47","title":"Button OnLongClick","about":"","code":"button1.setOnLongClickListener(new View.OnLongClickListener() {@Override public boolean onLongClick(View v){ Toast.makeText(getApplicationContext(),\"Long Clicked!\",Toast.LENGTH_LONG).show();return false;}});","androidv4_supported":"1","androidx_supported":"1","category":"Java,Widget","source":"","uid":"0","username":"Unknown"},{"id":"139","title":"Cache Directory","about":"","code":"getApplicationContext().getExternalCacheDir() + \"\/\";","androidv4_supported":"1","androidx_supported":"1","category":"Java","source":"","uid":"0","username":"Unknown"},{"id":"293","title":"CardView - Add programmatically","about":"","code":"\/\/ Initialize a new CardView CardView card = new CardView(mContext); \/\/ Set the CardView layoutParams LayoutParams params = new LayoutParams( LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT ); card.setLayoutParams(params); \/\/ Set CardView corner radius card.setRadius(9); \/\/ Set cardView content padding card.setContentPadding(15, 15, 15, 15); \/\/ Set a background color for CardView card.setCardBackgroundColor(Color.parseColor(\"#FFC6D6C3\")); \/\/ Set the CardView maximum elevation card.setMaxCardElevation(15); \/\/ Set CardView elevation card.setCardElevation(9); \/\/ Initialize a new TextView to put in CardView TextView tv = new TextView(mContext); tv.setLayoutParams(params); tv.setText(\"CardView\nProgrammatically\"); tv.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 30); tv.setTextColor(Color.RED); \/\/ Put the TextView in CardView card.addView(tv); \/\/ Finally, add the CardView in root layout mRelativeLayout.addView(card);","androidv4_supported":"1","androidx_supported":"1","category":"Java,Widget","source":"","uid":"0","username":"Unknown"},{"id":"282","title":"Catch error","about":"","code":"try { \/\/code that may crash } catch(Exception e){ \/\/here do something when try detects error Log.e(\"Error: \", e.toString()); }","androidv4_supported":"1","androidx_supported":"1","category":"Java","source":"","uid":"0","username":"Unknown"},{"id":"115","title":"Change NavigationBar Color","about":"","code":"Window window = this.getWindow();window.clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS); window.addFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS); window.setNavigationBarColor(Color.parseColor(\"#000000\"));","androidv4_supported":"1","androidx_supported":"1","category":"Java","source":"","uid":"0","username":"Unknown"},{"id":"424","title":"Change rounding for specific angles (edges)","about":"Change rounding for specific angles (edges)","code":"android.graphics.drawable.GradientDrawable d = new android.graphics.drawable.GradientDrawable();\nd.setStroke(3, Color.RED);\nd.setCornerRadii(new float[]{17.0f,18.0f,12.0f,8.0f,5.0f,5.0f,4.0f,2.0f});\nbutton.setBackgroundDrawable(d);","androidv4_supported":"1","androidx_supported":"1","category":"Java","source":"","uid":"0","username":"Unknown"},{"id":"116","title":"Change StatusBar Color","about":"","code":"Window w = this.getWindow();w.clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);w.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS); w.setStatusBarColor(Color.parseColor(\"#000000\"));","androidv4_supported":"1","androidx_supported":"1","category":"Java","source":"","uid":"0","username":"Unknown"},{"id":"492","title":"Check if installed from Google play","about":"Check if app is installed from playstore, a great layer of protection to prevent modded versions of your app (despite a good modder can remove this code too)","code":"\/\/ Note: Make a boolean variable named \"is_downloaded_from_playstore\"\r\n\r\n\/\/ A list with valid installers package name List<String> validInstallers = new ArrayList<>(java.util.Arrays.asList(\"com.android.vending\", \"com.google.android.feedback\"));\r\n\r\n \/\/ The package name of the app that has installed your app final\r\nString installer = getApplicationContext().getPackageManager().getInstallerPackageName(getApplicationContext().getPackageName());\r\n\r\n\/\/ true if your app has been downloaded from Play Store \r\nis_downloaded_from_playstore = installer != null && validInstallers.contains(installer);","androidv4_supported":"1","androidx_supported":"1","category":"Debug,Java","source":"Submitted by TheClashFruit from https:\/\/stackoverflow.com\/a\/37540163\/9300428","uid":"0","username":"Unknown"},{"id":"413","title":"Check Root (SuperSU & Magisk)","about":"Check if the phone is rooted (Simple and Easy)","code":"public static boolean isRooted()\n\t{\n\t\ttry\n\t\t{\n\t\t \/*\n\t\t * By Pything, very simple to use\n\t\t *\n\t\t * @param isRooted\n\t\t *\n\t\t * if (isRooted()) {\n\t\t * ROOTED\n\t\t * } else {\n\t\t * Non-rooted\n\t\t * }\n\t\t *\/\n\t\t\treturn Runtime.getRuntime().exec(\"su\").waitFor() == 10000;\n\t\t}\n\t\tcatch (Exception e)\n\t\t{\n\t\t\te.printStackTrace();\n\t\t\treturn false;\n\t\t}\n\t}","androidv4_supported":"1","androidx_supported":"1","category":"Java","source":"","uid":"0","username":"Unknown"},{"id":"498","title":"Check System Dark Mode","about":"Useful in changing app theme","code":"int nightModeFlags = getResources().getConfiguration().uiMode & android.content.res.Configuration.UI_MODE_NIGHT_MASK;\r\nif (nightModeFlags == android.content.res.Configuration.UI_MODE_NIGHT_YES) {\r\n\/\/ ACTION WHEN DARK MODE IS ON\r\n} else {\r\n\/\/ ACTION IF DARK MODE IS OFF\r\n};","androidv4_supported":"1","androidx_supported":"1","category":"Java","source":"Submitted by Everthing_Discord","uid":"0","username":"Unknown"},{"id":"436","title":"Check WiFi Internet Connection (New)","about":"\/\/ Place it wherever you want.\n\n\/\/Need permission\n\n<uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" \/>\n\n<uses-permission android:name=\"android.permission.CHANGE_NETWORK_STATE\" \/>\n\n<uses-permission android:name=\"android.permission.CHANGE_WIFI_STATE\" \/>\n","code":"\/\/ Place it wherever you want.\n\/\/ Check internet wifi connection.\n\nandroid.net.ConnectivityManager connMgr = (android.net.ConnectivityManager)getSystemService(Context.CONNECTIVITY_SERVICE);\nandroid.net.NetworkInfo networkInfo = connMgr.getActiveNetworkInfo();\nif (networkInfo != null && networkInfo.isConnected()) {\n} else {\nshowMessage(\"Internet Error. Please check your Internet... !\");\n\n\/\/ If the wifi internet is not connected then go directly to the wifi device settings.\n\nstartActivityForResult(new Intent(android.provider.Settings.ACTION_SETTINGS), 0);\n\nfinal android.net.wifi.WifiManager wifi = (android.net.wifi.WifiManager)getSystemService(Context.WIFI_SERVICE);\nwifi.setWifiEnabled(true);\n}\n\n\n\n\/\/Need permission\n\n<uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" \/>\n\n<uses-permission android:name=\"android.permission.CHANGE_NETWORK_STATE\" \/>\n\n<uses-permission android:name=\"android.permission.CHANGE_WIFI_STATE\" \/>\n\n\n","androidv4_supported":"1","androidx_supported":"1","category":"Java","source":"","uid":"0","username":"Unknown"},{"id":"400","title":"Checkbox color","about":"CheckBox Color","code":"\ncheckbox1.getButtonDrawable().setColorFilter(Color.parseColor(\"#FF00FF\"), PorterDuff.Mode.SRC_IN);\n\n\/\/checkbox1 is your checkbox ID\n\/\/#FF00FF is your RRGGBB color","androidv4_supported":"1","androidx_supported":"1","category":"Java","source":"","uid":"0","username":"Unknown"},{"id":"117","title":"Checkbox Set Color","about":"","code":"checkbox1.getButtonDrawable().setColorFilter(Color.parseColor(\"#FF00FF\"), PorterDuff.Mode.SRC_IN);\r\n\r\n\/\/checkbox1 is your checkbox ID\r\n\/\/#FF00FF is your RRGGBB color","androidv4_supported":"1","androidx_supported":"1","category":"Java","source":"","uid":"0","username":"Unknown"},{"id":"283","title":"Chronometer","about":"","code":"Chronometer cm = new Chronometer(this); linear1.addView (cm);","androidv4_supported":"1","androidx_supported":"1","category":"Java","source":"","uid":"0","username":"Unknown"},{"id":"356","title":"Class - BluetoothConnect","about":"","code":"package com.sketch.code.two;\r\n\r\nimport android.app.Activity;\r\nimport android.bluetooth.BluetoothAdapter;\r\nimport android.bluetooth.BluetoothDevice;\r\nimport android.content.Intent;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.Set;\r\nimport java.util.UUID;\r\n\r\npublic class BluetoothConnect {\r\nprivate static final String DEFAULT_UUID = \"00001101-0000-1000-8000-00805F9B34FB\";\r\n\r\nprivate Activity activity;\r\n\r\nprivate BluetoothAdapter bluetoothAdapter;\r\n\r\npublic BluetoothConnect(Activity activity) {\r\nthis.activity = activity;\r\nthis.bluetoothAdapter = BluetoothAdapter.getDefaultAdapter();\r\n}\r\n\r\npublic boolean isBluetoothEnabled() {\r\nif(bluetoothAdapter != null) return true;\r\n\r\nreturn false;\r\n}\r\n\r\npublic boolean isBluetoothActivated() {\r\nif(bluetoothAdapter == null) return false;\r\n\r\nreturn bluetoothAdapter.isEnabled();\r\n}\r\n\r\npublic void activateBluetooth() {\r\nIntent intent = new Intent(BluetoothAdapter.ACTION_REQUEST_ENABLE);\r\nactivity.startActivity(intent);\r\n}\r\n\r\npublic String getRandomUUID() {\r\nreturn String.valueOf(UUID.randomUUID());\r\n}\r\n\r\npublic void getPairedDevices(ArrayList<HashMap<String, Object>> results) {\r\nSet<BluetoothDevice> pairedDevices = bluetoothAdapter.getBondedDevices();\r\n\r\nif(pairedDevices.size() > 0) {\r\nfor(BluetoothDevice device : pairedDevices) {\r\nHashMap<String, Object> result = new HashMap<>();\r\nresult.put(\"name\", device.getName());\r\nresult.put(\"address\", device.getAddress());\r\n\r\nresults.add(result);\r\n}\r\n}\r\n}\r\n\r\npublic void readyConnection(BluetoothConnectionListener listener, String tag) {\r\nif(BluetoothController.getInstance().getState().equals(BluetoothController.STATE_NONE)) {\r\nBluetoothController.getInstance().start(this, listener, tag, UUID.fromString(DEFAULT_UUID), bluetoothAdapter);\r\n}\r\n}\r\n\r\npublic void readyConnection(BluetoothConnectionListener listener, String uuid, String tag) {\r\nif(BluetoothController.getInstance().getState().equals(BluetoothController.STATE_NONE)) {\r\nBluetoothController.getInstance().start(this, listener, tag, UUID.fromString(uuid), bluetoothAdapter);\r\n}\r\n}\r\n\r\n\r\npublic void startConnection(BluetoothConnectionListener listener, String address, String tag) {\r\nBluetoothDevice device = bluetoothAdapter.getRemoteDevice(address);\r\n\r\nBluetoothController.getInstance().connect(device, this, listener, tag, UUID.fromString(DEFAULT_UUID), bluetoothAdapter);\r\n}\r\n\r\npublic void startConnection(BluetoothConnectionListener listener, String uuid, String address, String tag) {\r\nBluetoothDevice device = bluetoothAdapter.getRemoteDevice(address);\r\n\r\nBluetoothController.getInstance().connect(device, this, listener, tag, UUID.fromString(uuid), bluetoothAdapter);\r\n}\r\n\r\npublic void stopConnection(BluetoothConnectionListener listener, String tag) {\r\nBluetoothController.getInstance().stop(this, listener, tag);\r\n}\r\n\r\npublic void sendData(BluetoothConnectionListener listener, String data, String tag) {\r\nString state = BluetoothController.getInstance().getState();\r\n\r\nif(!state.equals(BluetoothController.STATE_CONNECTED)) {\r\nlistener.onConnectionError(tag, state, \"Bluetooth is not connected yet\");\r\nreturn;\r\n}\r\n\r\nBluetoothController.getInstance().write(data.getBytes());\r\n}\r\n\r\npublic Activity getActivity() {\r\nreturn activity;\r\n}\r\n\r\npublic interface BluetoothConnectionListener {\r\nvoid onConnected(String tag, HashMap<String, Object> deviceData);\r\nvoid onDataReceived(String tag, byte[] data, int bytes);\r\nvoid onDataSent(String tag, byte[] data);\r\nvoid onConnectionError(String tag, String connectionState, String message);\r\nvoid onConnectionStopped(String tag);\r\n}\r\n}","androidv4_supported":"1","androidx_supported":"1","category":"Java,Bluetooth,Class","source":"","uid":"0","username":"Unknown"},{"id":"357","title":"Class - BluetoothContoller","about":"","code":"package com.sketch.code.two;\r\n\r\nimport android.bluetooth.BluetoothAdapter;\r\nimport android.bluetooth.BluetoothDevice;\r\nimport android.bluetooth.BluetoothServerSocket;\r\nimport android.bluetooth.BluetoothSocket;\r\n\r\nimport java.io.InputStream;\r\nimport java.io.OutputStream;\r\nimport java.util.HashMap;\r\nimport java.util.UUID;\r\n\r\npublic class BluetoothController {\r\npublic static final String STATE_NONE = \"none\";\r\npublic static final String STATE_LISTEN = \"listen\";\r\npublic static final String STATE_CONNECTING = \"connecting\";\r\npublic static final String STATE_CONNECTED = \"connected\";\r\n\r\nprivate AcceptThread acceptThread;\r\nprivate ConnectThread connectThread;\r\nprivate ConnectedThread connectedThread;\r\n\r\nprivate String state = STATE_NONE;\r\n\r\nprivate static BluetoothController instance;\r\n\r\npublic static synchronized BluetoothController getInstance() {\r\nif(instance == null) {\r\ninstance = new BluetoothController();\r\n}\r\n\r\nreturn instance;\r\n}\r\n\r\npublic synchronized void start(BluetoothConnect bluetoothConnect, BluetoothConnect.BluetoothConnectionListener listener, String tag, UUID uuid, BluetoothAdapter bluetoothAdapter) {\r\nif (connectThread != null) {\r\nconnectThread.cancel();\r\nconnectThread = null;\r\n}\r\n\r\nif (connectedThread != null) {\r\nconnectedThread.cancel();\r\nconnectedThread = null;\r\n}\r\n\r\nif (acceptThread != null) {\r\nacceptThread.cancel();\r\nacceptThread = null;\r\n}\r\n\r\nacceptThread = new AcceptThread(bluetoothConnect, listener, tag, uuid, bluetoothAdapter);\r\nacceptThread.start();}\r\n\r\npublic synchronized void connect(BluetoothDevice device, BluetoothConnect bluetoothConnect, BluetoothConnect.BluetoothConnectionListener listener, String tag, UUID uuid, BluetoothAdapter bluetoothAdapter) {\r\nif (state.equals(STATE_CONNECTING)) {\r\nif (connectThread != null) {\r\nconnectThread.cancel();\r\nconnectThread = null;\r\n}\r\n}\r\n\r\nif (connectedThread != null) {\r\nconnectedThread.cancel();\r\nconnectedThread = null;\r\n}\r\n\r\nconnectThread = new ConnectThread(device, bluetoothConnect, listener, tag, uuid, bluetoothAdapter);\r\nconnectThread.start();\r\n}\r\n\r\npublic synchronized void connected(BluetoothSocket socket, final BluetoothDevice device, BluetoothConnect bluetoothConnect, final BluetoothConnect.BluetoothConnectionListener listener, final String tag) {\r\nif (connectThread != null) {\r\nconnectThread.cancel();\r\nconnectThread = null;\r\n}\r\n\r\nif (connectedThread != null) {\r\nconnectedThread.cancel();\r\nconnectedThread = null;\r\n}\r\n\r\nif (acceptThread != null) {\r\nacceptThread.cancel();\r\nacceptThread = null;\r\n}\r\n\r\nconnectedThread = new ConnectedThread(socket, bluetoothConnect, listener, tag);\r\nconnectedThread.start();\r\n\r\nbluetoothConnect.getActivity().runOnUiThread(new Runnable() {\r\n@Override\r\npublic void run() {\r\nHashMap<String, Object> deviceMap = new HashMap<>();\r\ndeviceMap.put(\"name\", device.getName());\r\ndeviceMap.put(\"address\", device.getAddress());\r\n\r\nlistener.onConnected(tag, deviceMap);\r\n}\r\n});\r\n}\r\n\r\npublic synchronized void stop(BluetoothConnect bluetoothConnect, final BluetoothConnect.BluetoothConnectionListener listener, final String tag) {\r\nif (connectThread != null) {\r\nconnectThread.cancel();\r\nconnectThread = null;\r\n}\r\n\r\nif (connectedThread != null) {\r\nconnectedThread.cancel();\r\nconnectedThread = null;\r\n}\r\n\r\nif (acceptThread != null) {\r\nacceptThread.cancel();\r\nacceptThread = null;\r\n}\r\n\r\nstate = STATE_NONE;\r\n\r\nbluetoothConnect.getActivity().runOnUiThread(new Runnable() {\r\n@Override\r\npublic void run() {\r\nlistener.onConnectionStopped(tag);\r\n}\r\n});\r\n}\r\n\r\npublic void write(byte[] out) {\r\nConnectedThread r;\r\n\r\nsynchronized (this) {\r\nif (!state.equals(STATE_CONNECTED)) return;\r\nr = connectedThread;\r\n}\r\n\r\nr.write(out);\r\n}\r\n\r\npublic void connectionFailed(BluetoothConnect bluetoothConnect, final BluetoothConnect.BluetoothConnectionListener listener, final String tag, final String message) {\r\nstate = STATE_NONE;\r\n\r\nbluetoothConnect.getActivity().runOnUiThread(new Runnable() {\r\n@Override\r\npublic void run() {\r\nlistener.onConnectionError(tag, state, message);\r\n}\r\n});\r\n}\r\n\r\npublic void connectionLost(BluetoothConnect bluetoothConnect, final BluetoothConnect.BluetoothConnectionListener listener, final String tag) {\r\nstate = STATE_NONE;\r\n\r\nbluetoothConnect.getActivity().runOnUiThread(new Runnable() {\r\n@Override\r\npublic void run() {\r\nlistener.onConnectionError(tag, state, \"Bluetooth connection is disconnected\");\r\n}\r\n});\r\n}\r\n\r\npublic String getState() {\r\nreturn state;\r\n}\r\n\r\nprivate class AcceptThread extends Thread {\r\nprivate BluetoothServerSocket serverSocket;\r\n\r\nprivate BluetoothConnect bluetoothConnect;\r\nprivate BluetoothConnect.BluetoothConnectionListener listener;\r\nprivate String tag;\r\n\r\npublic AcceptThread(BluetoothConnect bluetoothConnect, BluetoothConnect.BluetoothConnectionListener listener, String tag, UUID uuid, BluetoothAdapter bluetoothAdapter) {\r\nthis.bluetoothConnect = bluetoothConnect;\r\nthis.listener = listener;\r\nthis.tag = tag;\r\n\r\ntry {\r\nserverSocket = bluetoothAdapter.listenUsingRfcommWithServiceRecord(tag, uuid);\r\n} catch (Exception e) {\r\ne.printStackTrace();\r\n}\r\n\r\nstate = STATE_LISTEN;\r\n}\r\n\r\n@Override\r\npublic void run() {\r\nBluetoothSocket bluetoothSocket;\r\n\r\nwhile (!state.equals(STATE_CONNECTED)) {\r\ntry {\r\nbluetoothSocket = serverSocket.accept();\r\n} catch (Exception e) {\r\ne.printStackTrace();\r\nbreak;\r\n}\r\n\r\nif (bluetoothSocket != null) {\r\nsynchronized (BluetoothController.this) {\r\nswitch (state) {\r\ncase STATE_LISTEN:\r\ncase STATE_CONNECTING:\r\nconnected(bluetoothSocket, bluetoothSocket.getRemoteDevice(), bluetoothConnect, listener, tag);\r\nbreak;\r\ncase STATE_NONE:\r\ncase STATE_CONNECTED:\r\ntry {\r\nbluetoothSocket.close();\r\n} catch (Exception e) {\r\ne.printStackTrace();\r\n}\r\nbreak;\r\n}\r\n}\r\n}\r\n}\r\n}\r\n\r\npublic void cancel() {\r\ntry {\r\nserverSocket.close();\r\n} catch (Exception e) {\r\ne.printStackTrace();\r\n}\r\n}\r\n}\r\n\r\nprivate class ConnectThread extends Thread {\r\nprivate BluetoothDevice device;\r\nprivate BluetoothSocket socket;\r\n\r\nprivate BluetoothConnect bluetoothConnect;\r\nprivate BluetoothConnect.BluetoothConnectionListener listener;\r\nprivate String tag;\r\nprivate BluetoothAdapter bluetoothAdapter;\r\n\r\npublic ConnectThread(BluetoothDevice device, BluetoothConnect bluetoothConnect, BluetoothConnect.BluetoothConnectionListener listener, String tag, UUID uuid, BluetoothAdapter bluetoothAdapter) {\r\nthis.device = device;\r\nthis.bluetoothConnect = bluetoothConnect;\r\nthis.listener = listener;\r\nthis.tag = tag;\r\nthis.bluetoothAdapter = bluetoothAdapter;\r\n\r\ntry {\r\nsocket = device.createRfcommSocketToServiceRecord(uuid);\r\n} catch (Exception e) {\r\ne.printStackTrace();\r\n}\r\n\r\nstate = STATE_CONNECTING;\r\n}\r\n\r\n@Override\r\npublic void run() {\r\nbluetoothAdapter.cancelDiscovery();\r\n\r\ntry {\r\nsocket.connect();\r\n} catch (Exception e) {\r\ntry {\r\nsocket.close();\r\n} catch (Exception e2) {\r\ne2.printStackTrace();\r\n}\r\nconnectionFailed(bluetoothConnect, listener, tag, e.getMessage());\r\nreturn;\r\n}\r\n\r\nsynchronized (BluetoothController.this) {\r\nconnectThread = null;\r\n}\r\n\r\nconnected(socket, device, bluetoothConnect, listener, tag);\r\n}\r\n\r\npublic void cancel() {\r\ntry {\r\nsocket.close();\r\n} catch (Exception e) {\r\ne.printStackTrace();\r\n}\r\n}\r\n}\r\n\r\nprivate class ConnectedThread extends Thread {\r\nprivate BluetoothSocket socket;\r\nprivate InputStream inputStream;\r\nprivate OutputStream outputStream;\r\n\r\nprivate BluetoothConnect bluetoothConnect;\r\nprivate BluetoothConnect.BluetoothConnectionListener listener;\r\nprivate String tag;\r\n\r\npublic ConnectedThread(BluetoothSocket socket, BluetoothConnect bluetoothConnect, BluetoothConnect.BluetoothConnectionListener listener, String tag) {\r\nthis.bluetoothConnect = bluetoothConnect;\r\nthis.listener = listener;\r\nthis.tag = tag;\r\n\r\nthis.socket = socket;\r\n\r\ntry {\r\ninputStream = socket.getInputStream();\r\noutputStream = socket.getOutputStream();\r\n} catch (Exception e) {\r\ne.printStackTrace();\r\n}\r\n\r\nstate = STATE_CONNECTED;\r\n}\r\n\r\npublic void run() {\r\nwhile (state.equals(STATE_CONNECTED)) {\r\ntry {\r\nfinal byte[] buffer = new byte[1024];\r\nfinal int bytes = inputStream.read(buffer);\r\n\r\nbluetoothConnect.getActivity().runOnUiThread(new Runnable() {\r\n@Override\r\npublic void run() {\r\nlistener.onDataReceived(tag, buffer, bytes);\r\n}\r\n});\r\n} catch (Exception e) {\r\ne.printStackTrace();\r\nconnectionLost(bluetoothConnect, listener, tag);\r\nbreak;\r\n}\r\n}\r\n}\r\n\r\npublic void write(final byte[] buffer) {\r\ntry {\r\noutputStream.write(buffer);\r\n\r\nbluetoothConnect.getActivity().runOnUiThread(new Runnable() {\r\n@Override\r\npublic void run() {\r\nlistener.onDataSent(tag, buffer);\r\n}\r\n});\r\n} catch (Exception e) {\r\ne.printStackTrace();\r\n}\r\n}\r\n\r\npublic void cancel() {\r\ntry {\r\nsocket.close();\r\n} catch (Exception e) {\r\ne.printStackTrace();\r\n}\r\n}\r\n}\r\n}","androidv4_supported":"1","androidx_supported":"1","category":"Java,Bluetooth,Class","source":"","uid":"0","username":"Unknown"},{"id":"358","title":"Class - FileUtil","about":"","code":"package com.sketch.code.two;\r\n\r\nimport android.content.ContentResolver;\r\nimport android.content.ContentUris;\r\nimport android.content.Context;\r\nimport android.database.Cursor;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.graphics.Canvas;\r\nimport android.graphics.ColorFilter;\r\nimport android.graphics.ColorMatrix;\r\nimport android.graphics.ColorMatrixColorFilter;\r\nimport android.graphics.LightingColorFilter;\r\nimport android.graphics.Matrix;\r\nimport android.graphics.Paint;\r\nimport android.graphics.PorterDuff;\r\nimport android.graphics.PorterDuffXfermode;\r\nimport android.graphics.Rect;\r\nimport android.graphics.RectF;\r\nimport android.media.ExifInterface;\r\nimport android.net.Uri;\r\nimport android.os.Environment;\r\nimport android.provider.DocumentsContract;\r\nimport android.provider.MediaStore;\r\nimport android.text.TextUtils;\r\n\r\nimport java.io.File;\r\nimport java.io.FileInputStream;\r\nimport java.io.FileOutputStream;\r\nimport java.io.FileReader;\r\nimport java.io.FileWriter;\r\nimport java.io.IOException;\r\nimport java.net.URLDecoder;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\n\r\npublic class FileUtil {\r\n\r\nprivate static void createNewFile(String path) {\r\nint lastSep = path.lastIndexOf(File.separator);\r\nif (lastSep > 0) {\r\nString dirPath = path.substring(0, lastSep);\r\nmakeDir(dirPath);\r\n}\r\n\r\nFile file = new File(path);\r\n\r\ntry {\r\nif (!file.exists())\r\nfile.createNewFile();\r\n} catch (IOException e) {\r\ne.printStackTrace();\r\n}\r\n}\r\n\r\npublic static String readFile(String path) {\r\ncreateNewFile(path);\r\n\r\nStringBuilder sb = new StringBuilder();\r\nFileReader fr = null;\r\ntry {\r\nfr = new FileReader(new File(path));\r\n\r\nchar[] buff = new char[1024];\r\nint length = 0;\r\n\r\nwhile ((length = fr.read(buff)) > 0) {\r\nsb.append(new String(buff, 0, length));\r\n}\r\n} catch (IOException e) {\r\ne.printStackTrace();\r\n} finally {\r\nif (fr != null) {\r\ntry {\r\nfr.close();\r\n} catch (Exception e) {\r\ne.printStackTrace();\r\n}\r\n}\r\n}\r\n\r\nreturn sb.toString();\r\n}\r\n\r\npublic static void writeFile(String path, String str) {\r\ncreateNewFile(path);\r\nFileWriter fileWriter = null;\r\n\r\ntry {\r\nfileWriter = new FileWriter(new File(path), false);\r\nfileWriter.write(str);\r\nfileWriter.flush();\r\n} catch (IOException e) {\r\ne.printStackTrace();\r\n} finally {\r\ntry {\r\nif (fileWriter != null)\r\nfileWriter.close();\r\n} catch (IOException e) {\r\ne.printStackTrace();\r\n}\r\n}\r\n}\r\n\r\npublic static void copyFile(String sourcePath, String destPath) {\r\nif (!isExistFile(sourcePath)) return;\r\ncreateNewFile(destPath);\r\n\r\nFileInputStream fis = null;\r\nFileOutputStream fos = null;\r\n\r\ntry {\r\nfis = new FileInputStream(sourcePath);\r\nfos = new FileOutputStream(destPath, false);\r\n\r\nbyte[] buff = new byte[1024];\r\nint length = 0;\r\n\r\nwhile ((length = fis.read(buff)) > 0) {\r\nfos.write(buff, 0, length);\r\n}\r\n} catch (IOException e) {\r\ne.printStackTrace();\r\n} finally {\r\nif (fis != null) {\r\ntry {\r\nfis.close();\r\n} catch (IOException e) {\r\ne.printStackTrace();\r\n}\r\n}\r\nif (fos != null) {\r\ntry {\r\nfos.close();\r\n} catch (IOException e) {\r\ne.printStackTrace();\r\n}\r\n}\r\n}\r\n}\r\n\r\npublic static void moveFile(String sourcePath, String destPath) {\r\ncopyFile(sourcePath, destPath);\r\ndeleteFile(sourcePath);\r\n}\r\n\r\npublic static void deleteFile(String path) {\r\nFile file = new File(path);\r\n\r\nif (!file.exists()) return;\r\n\r\nif (file.isFile()) {\r\nfile.delete();\r\nreturn;\r\n}\r\n\r\nFile[] fileArr = file.listFiles();\r\n\r\nif (fileArr != null) {\r\nfor (File subFile : fileArr) {\r\nif (subFile.isDirectory()) {\r\ndeleteFile(subFile.getAbsolutePath());\r\n}\r\n\r\nif (subFile.isFile()) {\r\nsubFile.delete();\r\n}\r\n}\r\n}\r\n\r\nfile.delete();\r\n}\r\n\r\npublic static boolean isExistFile(String path) {\r\nFile file = new File(path);\r\nreturn file.exists();\r\n}\r\n\r\npublic static void makeDir(String path) {\r\nif (!isExistFile(path)) {\r\nFile file = new File(path);\r\nfile.mkdirs();\r\n}\r\n}\r\n\r\npublic static void listDir(String path, ArrayList<String> list) {\r\nFile dir = new File(path);\r\nif (!dir.exists() || dir.isFile()) return;\r\n\r\nFile[] listFiles = dir.listFiles();\r\nif (listFiles == null || listFiles.length <= 0) return;\r\n\r\nif (list == null) return;\r\nlist.clear();\r\nfor (File file : listFiles) {\r\nlist.add(file.getAbsolutePath());\r\n}\r\n}\r\n\r\npublic static boolean isDirectory(String path) {\r\nif (!isExistFile(path)) return false;\r\nreturn new File(path).isDirectory();\r\n}\r\n\r\npublic static boolean isFile(String path) {\r\nif (!isExistFile(path)) return false;\r\nreturn new File(path).isFile();\r\n}\r\n\r\npublic static long getFileLength(String path) {\r\nif (!isExistFile(path)) return 0;\r\nreturn new File(path).length();\r\n}\r\n\r\npublic static String getExternalStorageDir() {\r\nreturn Environment.getExternalStorageDirectory().getAbsolutePath();\r\n}\r\n\r\npublic static String getPackageDataDir(Context context) {\r\nreturn context.getExternalFilesDir(null).getAbsolutePath();\r\n}\r\n\r\npublic static String getPublicDir(String type) {\r\nreturn Environment.getExternalStoragePublicDirectory(type).getAbsolutePath();\r\n}\r\n\r\npublic static String convertUriToFilePath(final Context context, final Uri uri) {\r\nString path = null;\r\nif (DocumentsContract.isDocumentUri(context, uri)) {\r\nif (isExternalStorageDocument(uri)) {\r\nfinal String docId = DocumentsContract.getDocumentId(uri);\r\nfinal String[] split = docId.split(\":\");\r\nfinal String type = split[0];\r\n\r\nif (\"primary\".equalsIgnoreCase(type)) {\r\npath = Environment.getExternalStorageDirectory() + \"\/\" + split[1];\r\n}\r\n} else if (isDownloadsDocument(uri)) {\r\nfinal String id = DocumentsContract.getDocumentId(uri);\r\n\r\nif (!TextUtils.isEmpty(id)) {\r\nif (id.startsWith(\"raw:\")) {\r\nreturn id.replaceFirst(\"raw:\", \"\");\r\n}\r\n}\r\n\r\nfinal Uri contentUri = ContentUris\r\n.withAppendedId(Uri.parse(\"content:\/\/downloads\/public_downloads\"), Long.valueOf(id));\r\n\r\npath = getDataColumn(context, contentUri, null, null);\r\n} else if (isMediaDocument(uri)) {\r\nfinal String docId = DocumentsContract.getDocumentId(uri);\r\nfinal String[] split = docId.split(\":\");\r\nfinal String type = split[0];\r\n\r\nUri contentUri = null;\r\nif (\"image\".equals(type)) {\r\ncontentUri = MediaStore.Images.Media.EXTERNAL_CONTENT_URI;\r\n} else if (\"video\".equals(type)) {\r\ncontentUri = MediaStore.Video.Media.EXTERNAL_CONTENT_URI;\r\n} else if (\"audio\".equals(type)) {\r\ncontentUri = MediaStore.Audio.Media.EXTERNAL_CONTENT_URI;\r\n}\r\n\r\nfinal String selection = MediaStore.Audio.Media._ID + \"=?\";\r\nfinal String[] selectionArgs = new String[]{\r\nsplit[1]\r\n};\r\n\r\npath = getDataColumn(context, contentUri, selection, selectionArgs);\r\n}\r\n} else if (ContentResolver.SCHEME_CONTENT.equalsIgnoreCase(uri.getScheme())) {\r\npath = getDataColumn(context, uri, null, null);\r\n} else if (ContentResolver.SCHEME_FILE.equalsIgnoreCase(uri.getScheme())) {\r\npath = uri.getPath();\r\n}\r\n\r\nif (path != null) {\r\ntry {\r\nreturn URLDecoder.decode(path, \"UTF-8\");\r\n}catch(Exception e){\r\nreturn null;\r\n}\r\n}\r\nreturn null;\r\n}\r\n\r\nprivate static String getDataColumn(Context context, Uri uri, String selection, String[] selectionArgs) {\r\nCursor cursor = null;\r\n\r\nfinal String column = MediaStore.Images.Media.DATA;\r\nfinal String[] projection = {\r\ncolumn\r\n};\r\n\r\ntry {\r\ncursor = context.getContentResolver().query(uri, projection, selection, selectionArgs, null);\r\nif (cursor != null && cursor.moveToFirst()) {\r\nfinal int column_index = cursor.getColumnIndexOrThrow(column);\r\nreturn cursor.getString(column_index);\r\n}\r\n} catch (Exception e) {\r\n\r\n} finally {\r\nif (cursor != null) {\r\ncursor.close();\r\n}\r\n}\r\nreturn null;\r\n}\r\n\r\n\r\nprivate static boolean isExternalStorageDocument(Uri uri) {\r\nreturn \"com.android.externalstorage.documents\".equals(uri.getAuthority());\r\n}\r\n\r\nprivate static boolean isDownloadsDocument(Uri uri) {\r\nreturn \"com.android.providers.downloads.documents\".equals(uri.getAuthority());\r\n}\r\n\r\nprivate static boolean isMediaDocument(Uri uri) {\r\nreturn \"com.android.providers.media.documents\".equals(uri.getAuthority());\r\n}\r\n\r\nprivate static void saveBitmap(Bitmap bitmap, String destPath) {\r\nFileOutputStream out = null;\r\nFileUtil.createNewFile(destPath);\r\ntry {\r\nout = new FileOutputStream(new File(destPath));\r\nbitmap.compress(Bitmap.CompressFormat.PNG, 100, out);\r\n} catch (Exception e) {\r\ne.printStackTrace();\r\n} finally {\r\ntry {\r\nif (out != null) {\r\nout.close();\r\n}\r\n} catch (IOException e) {\r\ne.printStackTrace();\r\n}\r\n}\r\n}\r\n\r\npublic static Bitmap getScaledBitmap(String path, int max) {\r\nBitmap src = BitmapFactory.decodeFile(path);\r\n\r\nint width = src.getWidth();\r\nint height = src.getHeight();\r\nfloat rate = 0.0f;\r\n\r\nif (width > height) {\r\nrate = max \/ (float) width;\r\nheight = (int) (height * rate);\r\nwidth = max;\r\n} else {\r\nrate = max \/ (float) height;\r\nwidth = (int) (width * rate);\r\nheight = max;\r\n}\r\n\r\nreturn Bitmap.createScaledBitmap(src, width, height, true);\r\n}\r\n\r\npublic static int calculateInSampleSize(BitmapFactory.Options options, int reqWidth, int reqHeight) {\r\nfinal int width = options.outWidth;\r\nfinal int height = options.outHeight;\r\nint inSampleSize = 1;\r\n\r\nif (height > reqHeight || width > reqWidth) {\r\nfinal int halfHeight = height \/ 2;\r\nfinal int halfWidth = width \/ 2;\r\n\r\nwhile ((halfHeight \/ inSampleSize) >= reqHeight && (halfWidth \/ inSampleSize) >= reqWidth) {\r\ninSampleSize *= 2;\r\n}\r\n}\r\n\r\nreturn inSampleSize;\r\n}\r\n\r\npublic static Bitmap decodeSampleBitmapFromPath(String path, int reqWidth, int reqHeight) {\r\nfinal BitmapFactory.Options options = new BitmapFactory.Options();\r\noptions.inJustDecodeBounds = true;\r\nBitmapFactory.decodeFile(path, options);\r\n\r\noptions.inSampleSize = calculateInSampleSize(options, reqWidth, reqHeight);\r\n\r\noptions.inJustDecodeBounds = false;\r\nreturn BitmapFactory.decodeFile(path, options);\r\n}\r\n\r\npublic static void resizeBitmapFileRetainRatio(String fromPath, String destPath, int max) {\r\nif (!isExistFile(fromPath)) return;\r\nBitmap bitmap = getScaledBitmap(fromPath, max);\r\nsaveBitmap(bitmap, destPath);\r\n}\r\n\r\npublic static void resizeBitmapFileToSquare(String fromPath, String destPath, int max) {\r\nif (!isExistFile(fromPath)) return;\r\nBitmap src = BitmapFactory.decodeFile(fromPath);\r\nBitmap bitmap = Bitmap.createScaledBitmap(src, max, max, true);\r\nsaveBitmap(bitmap, destPath);\r\n}\r\n\r\npublic static void resizeBitmapFileToCircle(String fromPath, String destPath) {\r\nif (!isExistFile(fromPath)) return;\r\nBitmap src = BitmapFactory.decodeFile(fromPath);\r\nBitmap bitmap = Bitmap.createBitmap(src.getWidth(),\r\nsrc.getHeight(), Bitmap.Config.ARGB_8888);\r\nCanvas canvas = new Canvas(bitmap);\r\n\r\nfinal int color = 0xff424242;\r\nfinal Paint paint = new Paint();\r\nfinal Rect rect = new Rect(0, 0, src.getWidth(), src.getHeight());\r\n\r\npaint.setAntiAlias(true);\r\ncanvas.drawARGB(0, 0, 0, 0);\r\npaint.setColor(color);\r\ncanvas.drawCircle(src.getWidth() \/ 2, src.getHeight() \/ 2,\r\nsrc.getWidth() \/ 2, paint);\r\npaint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.SRC_IN));\r\ncanvas.drawBitmap(src, rect, rect, paint);\r\n\r\nsaveBitmap(bitmap, destPath);\r\n}\r\n\r\npublic static void resizeBitmapFileWithRoundedBorder(String fromPath, String destPath, int pixels) {\r\nif (!isExistFile(fromPath)) return;\r\nBitmap src = BitmapFactory.decodeFile(fromPath);\r\nBitmap bitmap = Bitmap.createBitmap(src.getWidth(), src\r\n.getHeight(), Bitmap.Config.ARGB_8888);\r\nCanvas canvas = new Canvas(bitmap);\r\n\r\nfinal int color = 0xff424242;\r\nfinal Paint paint = new Paint();\r\nfinal Rect rect = new Rect(0, 0, src.getWidth(), src.getHeight());\r\nfinal RectF rectF = new RectF(rect);\r\nfinal float roundPx = pixels;\r\n\r\npaint.setAntiAlias(true);\r\ncanvas.drawARGB(0, 0, 0, 0);\r\npaint.setColor(color);\r\ncanvas.drawRoundRect(rectF, roundPx, roundPx, paint);\r\n\r\npaint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.SRC_IN));\r\ncanvas.drawBitmap(src, rect, rect, paint);\r\n\r\nsaveBitmap(bitmap, destPath);\r\n}\r\n\r\npublic static void cropBitmapFileFromCenter(String fromPath, String destPath, int w, int h) {\r\nif (!isExistFile(fromPath)) return;\r\nBitmap src = BitmapFactory.decodeFile(fromPath);\r\n\r\nint width = src.getWidth();\r\nint height = src.getHeight();\r\n\r\nif (width < w && height < h)\r\nreturn;\r\n\r\nint x = 0;\r\nint y = 0;\r\n\r\nif (width > w)\r\nx = (width - w) \/ 2;\r\n\r\nif (height > h)\r\ny = (height - h) \/ 2;\r\n\r\nint cw = w;\r\nint ch = h;\r\n\r\nif (w > width)\r\ncw = width;\r\n\r\nif (h > height)\r\nch = height;\r\n\r\nBitmap bitmap = Bitmap.createBitmap(src, x, y, cw, ch);\r\nsaveBitmap(bitmap, destPath);\r\n}\r\n\r\npublic static void rotateBitmapFile(String fromPath, String destPath, float angle) {\r\nif (!isExistFile(fromPath)) return;\r\nBitmap src = BitmapFactory.decodeFile(fromPath);\r\nMatrix matrix = new Matrix();\r\nmatrix.postRotate(angle);\r\nBitmap bitmap = Bitmap.createBitmap(src, 0, 0, src.getWidth(), src.getHeight(), matrix, true);\r\nsaveBitmap(bitmap, destPath);\r\n}\r\n\r\npublic static void scaleBitmapFile(String fromPath, String destPath, float x, float y) {\r\nif (!isExistFile(fromPath)) return;\r\nBitmap src = BitmapFactory.decodeFile(fromPath);\r\nMatrix matrix = new Matrix();\r\nmatrix.postScale(x, y);\r\n\r\nint w = src.getWidth();\r\nint h = src.getHeight();\r\n\r\nBitmap bitmap = Bitmap.createBitmap(src, 0, 0, w, h, matrix, true);\r\nsaveBitmap(bitmap, destPath);\r\n}\r\n\r\npublic static void skewBitmapFile(String fromPath, String destPath, float x, float y) {\r\nif (!isExistFile(fromPath)) return;\r\nBitmap src = BitmapFactory.decodeFile(fromPath);\r\nMatrix matrix = new Matrix();\r\nmatrix.postSkew(x, y);\r\n\r\nint w = src.getWidth();\r\nint h = src.getHeight();\r\n\r\nBitmap bitmap = Bitmap.createBitmap(src, 0, 0, w, h, matrix, true);\r\nsaveBitmap(bitmap, destPath);\r\n}\r\n\r\npublic static void setBitmapFileColorFilter(String fromPath, String destPath, int color) {\r\nif (!isExistFile(fromPath)) return;\r\nBitmap src = BitmapFactory.decodeFile(fromPath);\r\nBitmap bitmap = Bitmap.createBitmap(src, 0, 0,\r\nsrc.getWidth() - 1, src.getHeight() - 1);\r\nPaint p = new Paint();\r\nColorFilter filter = new LightingColorFilter(color, 1);\r\np.setColorFilter(filter);\r\nCanvas canvas = new Canvas(bitmap);\r\ncanvas.drawBitmap(bitmap, 0, 0, p);\r\nsaveBitmap(bitmap, destPath);\r\n}\r\n\r\npublic static void setBitmapFileBrightness(String fromPath, String destPath, float brightness) {\r\nif (!isExistFile(fromPath)) return;\r\nBitmap src = BitmapFactory.decodeFile(fromPath);\r\nColorMatrix cm = new ColorMatrix(new float[]\r\n{\r\n1, 0, 0, 0, brightness,\r\n0, 1, 0, 0, brightness,\r\n0, 0, 1, 0, brightness,\r\n0, 0, 0, 1, 0\r\n});\r\n\r\nBitmap bitmap = Bitmap.createBitmap(src.getWidth(), src.getHeight(), src.getConfig());\r\nCanvas canvas = new Canvas(bitmap);\r\nPaint paint = new Paint();\r\npaint.setColorFilter(new ColorMatrixColorFilter(cm));\r\ncanvas.drawBitmap(src, 0, 0, paint);\r\nsaveBitmap(bitmap, destPath);\r\n}\r\n\r\npublic static void setBitmapFileContrast(String fromPath, String destPath, float contrast) {\r\nif (!isExistFile(fromPath)) return;\r\nBitmap src = BitmapFactory.decodeFile(fromPath);\r\nColorMatrix cm = new ColorMatrix(new float[]\r\n{\r\ncontrast, 0, 0, 0, 0,\r\n0, contrast, 0, 0, 0,\r\n0, 0, contrast, 0, 0,\r\n0, 0, 0, 1, 0\r\n});\r\n\r\nBitmap bitmap = Bitmap.createBitmap(src.getWidth(), src.getHeight(), src.getConfig());\r\nCanvas canvas = new Canvas(bitmap);\r\nPaint paint = new Paint();\r\npaint.setColorFilter(new ColorMatrixColorFilter(cm));\r\ncanvas.drawBitmap(src, 0, 0, paint);\r\n\r\nsaveBitmap(bitmap, destPath);\r\n}\r\n\r\npublic static int getJpegRotate(String filePath) {\r\nint rotate = 0;\r\ntry {\r\nExifInterface exif = new ExifInterface(filePath);\r\nint iOrientation = exif.getAttributeInt(ExifInterface.TAG_ORIENTATION, -1);\r\n\r\nswitch (iOrientation) {\r\ncase ExifInterface.ORIENTATION_ROTATE_90:\r\nrotate = 90;\r\nbreak;\r\ncase ExifInterface.ORIENTATION_ROTATE_180:\r\nrotate = 180;\r\nbreak;\r\ncase ExifInterface.ORIENTATION_ROTATE_270:\r\nrotate = 270;\r\nbreak;\r\ndefault:\r\nrotate = 0;\r\nbreak;\r\n}\r\n}\r\ncatch (IOException e) {\r\nreturn 0;\r\n}\r\n\r\nreturn rotate;\r\n}\r\npublic static File createNewPictureFile(Context context) {\r\nSimpleDateFormat date = new SimpleDateFormat(\"yyyyMMdd_HHmmss\");\r\nString fileName = date.format(new Date()) + \".jpg\";\r\nFile file = new File(context.getExternalFilesDir(Environment.DIRECTORY_DCIM).getAbsolutePath() + File.separator + fileName);\r\nreturn file;\r\n}\r\n}","androidv4_supported":"1","androidx_supported":"1","category":"Java,Class","source":"","uid":"0","username":"Unknown"},{"id":"359","title":"Class - GoogleMapController","about":"","code":"package com.sketch.code.two;\r\n\r\nimport com.google.android.gms.maps.CameraUpdateFactory;\r\nimport com.google.android.gms.maps.GoogleMap;\r\nimport com.google.android.gms.maps.MapView;\r\nimport com.google.android.gms.maps.OnMapReadyCallback;\r\nimport com.google.android.gms.maps.model.BitmapDescriptorFactory;\r\nimport com.google.android.gms.maps.model.LatLng;\r\nimport com.google.android.gms.maps.model.Marker;\r\nimport com.google.android.gms.maps.model.MarkerOptions;\r\n\r\nimport java.util.HashMap;\r\n\r\npublic class GoogleMapController {\r\n\r\nprivate GoogleMap googleMap;\r\nprivate MapView mapView;\r\nprivate HashMap<String, Marker> mapMarker;\r\nprivate GoogleMap.OnMarkerClickListener onMarkerClickListener;\r\n\r\npublic GoogleMapController(MapView mapView, OnMapReadyCallback onMapReadyCallback) {\r\nthis.mapView = mapView;\r\nmapMarker = new HashMap<>();\r\n\r\nthis.mapView.getMapAsync(onMapReadyCallback);\r\n}\r\n\r\npublic void setGoogleMap(GoogleMap googleMap) {\r\nthis.googleMap = googleMap;\r\n\r\nif (onMarkerClickListener != null) {\r\nthis.googleMap.setOnMarkerClickListener(onMarkerClickListener);\r\n}\r\n}\r\n\r\npublic GoogleMap getGoogleMap() {\r\nreturn googleMap;\r\n}\r\n\r\npublic void setMapType(int _mapType) {\r\nif (googleMap == null) return;\r\n\r\ngoogleMap.setMapType(_mapType);\r\n}\r\n\r\npublic void setOnMarkerClickListener(GoogleMap.OnMarkerClickListener onMarkerClickListener) {\r\nthis.onMarkerClickListener = onMarkerClickListener;\r\n\r\nif (googleMap != null) {\r\nthis.googleMap.setOnMarkerClickListener(onMarkerClickListener);\r\n}\r\n}\r\n\r\npublic void addMarker(String id, double lat, double lng) {\r\nif (googleMap == null) return;\r\n\r\nMarkerOptions markerOptions = new MarkerOptions();\r\nmarkerOptions.position(new LatLng(lat, lng));\r\nMarker marker = googleMap.addMarker(markerOptions);\r\nmarker.setTag(id);\r\nmapMarker.put(id, marker);\r\n}\r\n\r\npublic Marker getMarker(String id) {\r\nreturn mapMarker.get(id);\r\n}\r\n\r\npublic void setMarkerInfo(String id, String title, String snippet) {\r\nMarker marker = mapMarker.get(id);\r\nif (marker == null) return;\r\n\r\nmarker.setTitle(title);\r\nmarker.setSnippet(snippet);\r\n}\r\n\r\npublic void setMarkerPosition(String id, double lat, double lng) {\r\nMarker marker = mapMarker.get(id);\r\nif (marker == null) return;\r\n\r\nmarker.setPosition(new LatLng(lat, lng));\r\n}\r\n\r\npublic void setMarkerColor(String id, float color, double alpha) {\r\nMarker marker = mapMarker.get(id);\r\nif (marker == null) return;\r\n\r\nmarker.setAlpha((float) alpha);\r\nmarker.setIcon(BitmapDescriptorFactory.defaultMarker(color));\r\n}\r\n\r\npublic void setMarkerIcon(String id, int resIcon) {\r\nMarker marker = mapMarker.get(id);\r\nif (marker == null) return;\r\n\r\nmarker.setIcon(BitmapDescriptorFactory.fromResource(resIcon));\r\n}\r\n\r\npublic void setMarkerVisible(String id, boolean visible) {\r\nMarker marker = mapMarker.get(id);\r\nif (marker == null) return;\r\n\r\nmarker.setVisible(visible);\r\n}\r\n\r\n\r\npublic void moveCamera(double lat, double lng) {\r\nif (googleMap == null) return;\r\n\r\ngoogleMap.moveCamera(CameraUpdateFactory.newLatLng(new LatLng(lat, lng)));\r\n}\r\n\r\npublic void zoomTo(double zoom) {\r\nif (googleMap == null) return;\r\n\r\ngoogleMap.moveCamera(CameraUpdateFactory.zoomTo((float) zoom));\r\n}\r\n\r\npublic void zoomIn() {\r\nif (googleMap == null) return;\r\n\r\ngoogleMap.moveCamera(CameraUpdateFactory.zoomIn());\r\n}\r\n\r\npublic void zoomOut() {\r\nif (googleMap == null) return;\r\n\r\ngoogleMap.moveCamera(CameraUpdateFactory.zoomOut());\r\n}\r\n}","androidv4_supported":"1","androidx_supported":"1","category":"Java,Class","source":"","uid":"0","username":"Unknown"},{"id":"360","title":"Class - RequestNetwork","about":"","code":"package com.sketch.code.two;\r\n\r\nimport android.app.Activity;\r\n\r\nimport java.util.HashMap;\r\n\r\npublic class RequestNetwork {\r\nprivate HashMap<String, Object> params = new HashMap<>();\r\nprivate HashMap<String, Object> headers = new HashMap<>();\r\n\r\nprivate Activity activity;\r\n\r\nprivate int requestType = 0;\r\n\r\npublic RequestNetwork(Activity activity) {\r\nthis.activity = activity;\r\n}\r\n\r\npublic void setHeaders(HashMap<String, Object> headers) {\r\nthis.headers = headers;\r\n}\r\n\r\npublic void setParams(HashMap<String, Object> params, int requestType) {\r\nthis.params = params;\r\nthis.requestType = requestType;\r\n}\r\n\r\npublic HashMap<String, Object> getParams() {\r\nreturn params;\r\n}\r\n\r\npublic HashMap<String, Object> getHeaders() {\r\nreturn headers;\r\n}\r\n\r\npublic Activity getActivity() {\r\nreturn activity;\r\n}\r\n\r\npublic int getRequestType() {\r\nreturn requestType;\r\n}\r\n\r\npublic void startRequestNetwork(String method, String url, String tag, RequestListener requestListener) {\r\nRequestNetworkController.getInstance().execute(this, method, url, tag, requestListener);\r\n}\r\n\r\npublic interface RequestListener {\r\npublic void onResponse(String tag, String response);\r\npublic void onErrorResponse(String tag, String message);\r\n}\r\n}","androidv4_supported":"1","androidx_supported":"1","category":"Java,Class","source":"","uid":"0","username":"Unknown"},{"id":"361","title":"Class - RequestNetworkController","about":"","code":"package com.sketch.code.two;\r\n\r\nimport com.google.gson.Gson;\r\n\r\nimport java.io.IOException;\r\nimport java.security.cert.CertificateException;\r\nimport java.util.HashMap;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\nimport javax.net.ssl.HostnameVerifier;\r\nimport javax.net.ssl.SSLContext;\r\nimport javax.net.ssl.SSLSession;\r\nimport javax.net.ssl.SSLSocketFactory;\r\nimport javax.net.ssl.TrustManager;\r\nimport javax.net.ssl.X509TrustManager;\r\n\r\nimport okhttp3.Call;\r\nimport okhttp3.Callback;\r\nimport okhttp3.FormBody;\r\nimport okhttp3.Headers;\r\nimport okhttp3.HttpUrl;\r\nimport okhttp3.OkHttpClient;\r\nimport okhttp3.Request;\r\nimport okhttp3.RequestBody;\r\nimport okhttp3.Response;\r\n\r\npublic class RequestNetworkController {\r\npublic static final String GET = \"GET\";\r\npublic static final String POST = \"POST\";\r\npublic static final String PUT = \"PUT\";\r\npublic static final String DELETE = \"DELETE\";\r\n\r\npublic static final int REQUEST_PARAM = 0;\r\npublic static final int REQUEST_BODY = 1;\r\n\r\nprivate static final int SOCKET_TIMEOUT = 15000;\r\nprivate static final int READ_TIMEOUT = 25000;\r\n\r\nprotected OkHttpClient client;\r\n\r\nprivate static RequestNetworkController mInstance;\r\n\r\npublic static synchronized RequestNetworkController getInstance() {\r\nif(mInstance == null) {\r\nmInstance = new RequestNetworkController();\r\n}\r\nreturn mInstance;\r\n}\r\n\r\nprivate OkHttpClient getClient() {\r\nif (client == null) {\r\nOkHttpClient.Builder builder = new OkHttpClient.Builder();\r\n\r\ntry {\r\nfinal TrustManager[] trustAllCerts = new TrustManager[]{\r\nnew X509TrustManager() {\r\n@Override\r\npublic void checkClientTrusted(java.security.cert.X509Certificate[] chain, String authType)\r\nthrows CertificateException {\r\n}\r\n\r\n@Override\r\npublic void checkServerTrusted(java.security.cert.X509Certificate[] chain, String authType)\r\nthrows CertificateException {\r\n}\r\n\r\n@Override\r\npublic java.security.cert.X509Certificate[] getAcceptedIssuers() {\r\nreturn new java.security.cert.X509Certificate[]{};\r\n}\r\n}\r\n};\r\n\r\nfinal SSLContext sslContext = SSLContext.getInstance(\"TLS\");\r\nsslContext.init(null, trustAllCerts, new java.security.SecureRandom());\r\nfinal SSLSocketFactory sslSocketFactory = sslContext.getSocketFactory();\r\nbuilder.sslSocketFactory(sslSocketFactory, (X509TrustManager) trustAllCerts[0]);\r\nbuilder.connectTimeout(SOCKET_TIMEOUT, TimeUnit.MILLISECONDS);\r\nbuilder.readTimeout(READ_TIMEOUT, TimeUnit.MILLISECONDS);\r\nbuilder.writeTimeout(READ_TIMEOUT, TimeUnit.MILLISECONDS);\r\nbuilder.hostnameVerifier(new HostnameVerifier() {\r\n@Override\r\npublic boolean verify(String hostname, SSLSession session) {\r\nreturn true;\r\n}\r\n});\r\n} catch (Exception e) {\r\n}\r\n\r\nclient = builder.build();\r\n}\r\n\r\nreturn client;\r\n}\r\n\r\npublic void execute(final RequestNetwork requestNetwork, String method, String url, final String tag, final RequestNetwork.RequestListener requestListener) {\r\nRequest.Builder reqBuilder = new Request.Builder();\r\nHeaders.Builder headerBuilder = new Headers.Builder();\r\n\r\nif(requestNetwork.getHeaders().size() > 0) {\r\nHashMap<String, Object> headers = requestNetwork.getHeaders();\r\n\r\nfor(HashMap.Entry<String, Object> header : headers.entrySet()) {\r\nheaderBuilder.add(header.getKey(), String.valueOf(header.getValue()));\r\n}\r\n}\r\n\r\ntry {\r\nif (requestNetwork.getRequestType() == REQUEST_PARAM) {\r\nif (method.equals(GET)) {\r\nHttpUrl.Builder httpBuilder;\r\n\r\ntry {\r\nhttpBuilder = HttpUrl.parse(url).newBuilder();\r\n} catch (NullPointerException ne) {\r\nthrow new NullPointerException(\"unexpected url: \" + url);\r\n}\r\n\r\nif (requestNetwork.getParams().size() > 0) {\r\nHashMap<String, Object> params = requestNetwork.getParams();\r\n\r\nfor (HashMap.Entry<String, Object> param : params.entrySet()) {\r\nhttpBuilder.addQueryParameter(param.getKey(), String.valueOf(param.getValue()));\r\n}\r\n}\r\n\r\nreqBuilder.url(httpBuilder.build()).headers(headerBuilder.build()).get();\r\n} else {\r\nFormBody.Builder formBuilder = new FormBody.Builder();\r\nif (requestNetwork.getParams().size() > 0) {\r\nHashMap<String, Object> params = requestNetwork.getParams();\r\n\r\nfor (HashMap.Entry<String, Object> param : params.entrySet()) {\r\nformBuilder.add(param.getKey(), String.valueOf(param.getValue()));\r\n}\r\n}\r\n\r\nRequestBody reqBody = formBuilder.build();\r\n\r\nreqBuilder.url(url).headers(headerBuilder.build()).method(method, reqBody);\r\n}\r\n} else {\r\nRequestBody reqBody = RequestBody.create(okhttp3.MediaType.parse(\"application\/json\"), new Gson().toJson(requestNetwork.getParams()));\r\n\r\nif (method.equals(GET)) {\r\nreqBuilder.url(url).headers(headerBuilder.build()).get();\r\n} else {\r\nreqBuilder.url(url).headers(headerBuilder.build()).method(method, reqBody);\r\n}\r\n}\r\n\r\nRequest req = reqBuilder.build();\r\n\r\ngetClient().newCall(req).enqueue(new Callback() {\r\n@Override\r\npublic void onFailure(Call call, final IOException e) {\r\nrequestNetwork.getActivity().runOnUiThread(new Runnable() {\r\n@Override\r\npublic void run() {\r\nrequestListener.onErrorResponse(tag, e.getMessage());\r\n}\r\n});\r\n}\r\n\r\n@Override\r\npublic void onResponse(Call call, final Response response) throws IOException {\r\nfinal String responseBody = response.body().string().trim();\r\nrequestNetwork.getActivity().runOnUiThread(new Runnable() {\r\n@Override\r\npublic void run() {\r\nrequestListener.onResponse(tag, responseBody);\r\n}\r\n});\r\n}\r\n});\r\n} catch (Exception e) {\r\nrequestListener.onErrorResponse(tag, e.getMessage());\r\n}\r\n}\r\n}","androidv4_supported":"1","androidx_supported":"1","category":"Java,Class","source":"","uid":"0","username":"Unknown"},{"id":"9","title":"Class Drawable","about":"\"Replace \"imageview1\" on your imageview id...\"","code":"imageview1.setBackground(Drawables.getSelectableDrawableFor(Color.parseColor(\"#404040\")));\r\nimageview1.setClickable(true);\r\n\r\n}\r\n\r\npublic static class Drawables {\r\n public static android.graphics.drawable.Drawable getSelectableDrawableFor(int color) {\r\n if (Build.VERSION.SDK_INT < Build.VERSION_CODES.LOLLIPOP) {\r\n android.graphics.drawable.StateListDrawable stateListDrawable = new android.graphics.drawable.StateListDrawable();\r\n stateListDrawable.addState(\r\n new int[]{android.R.attr.state_pressed},\r\n new android.graphics.drawable.ColorDrawable(Color.parseColor(\"#ffffff\"))\r\n );\r\n stateListDrawable.addState(\r\n new int[]{android.R.attr.state_focused},\r\n new android.graphics.drawable.ColorDrawable(Color.parseColor(\"#00ffffff\"))\r\n );\r\n stateListDrawable.addState(\r\n new int[]{},\r\n new android.graphics.drawable.ColorDrawable(Color.parseColor(\"#00ffffff\"))\r\n );\r\n return stateListDrawable;\r\n } else {\r\n android.content.res.ColorStateList pressedColor = android.content.res.ColorStateList.valueOf(color);\r\n android.graphics.drawable.ColorDrawable defaultColor = new android.graphics.drawable.ColorDrawable(Color.parseColor(\"#00ffffff\"));\r\n \r\nandroid.graphics.drawable.Drawable rippleColor = getRippleColor(color);\r\n return new android.graphics.drawable.RippleDrawable(\r\n pressedColor,\r\n defaultColor,\r\n rippleColor\r\n );\r\n }\r\n }\r\n\r\n private static android.graphics.drawable.Drawable getRippleColor(int color) {\r\n float[] outerRadii = new float[8];\r\n Arrays.fill(outerRadii, 0);\r\n android.graphics.drawable.shapes.RoundRectShape r = new android.graphics.drawable.shapes.RoundRectShape(outerRadii, null, null);\r\n \r\nandroid.graphics.drawable.ShapeDrawable shapeDrawable = new \r\nandroid.graphics.drawable.ShapeDrawable(r);\r\n shapeDrawable.getPaint().setColor(color);\r\n return shapeDrawable;\r\n }\r\n \r\n private static int lightenOrDarken(int color, double fraction) {\r\n if (canLighten(color, fraction)) {\r\n return lighten(color, fraction);\r\n } else {\r\n return darken(color, fraction);\r\n }\r\n }\r\n \r\n private static int lighten(int color, double fraction) {\r\n int red = Color.red(color);\r\n int green = Color.green(color);\r\n int blue = Color.blue(color);\r\n red = lightenColor(red, fraction);\r\n green = lightenColor(green, fraction);\r\n blue = lightenColor(blue, fraction);\r\n int alpha = Color.alpha(color);\r\n return Color.argb(alpha, red, green, blue);\r\n }\r\n \r\n private static int darken(int color, double fraction) {\r\n int red = Color.red(color);\r\n int green = Color.green(color);\r\n int blue = Color.blue(color);\r\n red = darkenColor(red, fraction);\r\n green = darkenColor(green, fraction);\r\n blue = darkenColor(blue, fraction);\r\n int alpha = Color.alpha(color);\r\n \r\n return Color.argb(alpha, red, green, blue);\r\n }\r\n \r\n private static boolean canLighten(int color, double fraction) {\r\n int red = Color.red(color);\r\n int green = Color.green(color);\r\n int blue = Color.blue(color);\r\n return canLightenComponent(red, fraction)\r\n && canLightenComponent(green, fraction)\r\n && canLightenComponent(blue, fraction);\r\n }\r\n \r\n private static boolean canLightenComponent(int colorComponent, double fraction) {\r\n int red = Color.red(colorComponent);\r\n int green = Color.green(colorComponent);\r\n int blue = Color.blue(colorComponent);\r\n return red + (red * fraction) < 255\r\n && green + (green * fraction) < 255\r\n && blue + (blue * fraction) < 255;\r\n }\r\n \r\n private static int darkenColor(int color, double fraction) {\r\n return (int) Math.max(color - (color * fraction), 0);\r\n }\r\n \r\n private static int lightenColor(int color, double fraction) {\r\n return (int) Math.min(color + (color * fraction), 255);\r\n }\r\n}\r\npublic static class CircleDrawables {\r\n public static android.graphics.drawable.Drawable getSelectableDrawableFor(int color) {\r\n if (Build.VERSION.SDK_INT < Build.VERSION_CODES.LOLLIPOP) {\r\n android.graphics.drawable.StateListDrawable stateListDrawable = new android.graphics.drawable.StateListDrawable();\r\n stateListDrawable.addState(\r\n new int[]{android.R.attr.state_pressed},\r\n new android.graphics.drawable.ColorDrawable(Color.parseColor(\"#ffffff\"))\r\n );\r\n stateListDrawable.addState(\r\n new int[]{android.R.attr.state_focused},\r\n new android.graphics.drawable.ColorDrawable(Color.parseColor(\"#00ffffff\"))\r\n );\r\n stateListDrawable.addState(\r\n new int[]{},\r\n new android.graphics.drawable.ColorDrawable(Color.parseColor(\"#00ffffff\"))\r\n );\r\n return stateListDrawable;\r\n } else {\r\n android.content.res.ColorStateList pressedColor = android.content.res.ColorStateList.valueOf(color);\r\n android.graphics.drawable.ColorDrawable defaultColor = new android.graphics.drawable.ColorDrawable(Color.parseColor(\"#00ffffff\"));\r\n \r\nandroid.graphics.drawable.Drawable rippleColor = getRippleColor(color);\r\n return new android.graphics.drawable.RippleDrawable(\r\n pressedColor,\r\n defaultColor,\r\n rippleColor\r\n );\r\n }\r\n }\r\n\r\n private static android.graphics.drawable.Drawable getRippleColor(int color) {\r\n float[] outerRadii = new float[180];\r\n Arrays.fill(outerRadii, 80);\r\n android.graphics.drawable.shapes.RoundRectShape r = new android.graphics.drawable.shapes.RoundRectShape(outerRadii, null, null);\r\n \r\nandroid.graphics.drawable.ShapeDrawable shapeDrawable = new \r\nandroid.graphics.drawable.ShapeDrawable(r);\r\n shapeDrawable.getPaint().setColor(color);\r\n return shapeDrawable;\r\n }\r\n \r\n private static int lightenOrDarken(int color, double fraction) {\r\n if (canLighten(color, fraction)) {\r\n return lighten(color, fraction);\r\n } else {\r\n return darken(color, fraction);\r\n }\r\n }\r\n \r\n private static int lighten(int color, double fraction) {\r\n int red = Color.red(color);\r\n int green = Color.green(color);\r\n int blue = Color.blue(color);\r\n red = lightenColor(red, fraction);\r\n green = lightenColor(green, fraction);\r\n blue = lightenColor(blue, fraction);\r\n int alpha = Color.alpha(color);\r\n return Color.argb(alpha, red, green, blue);\r\n }\r\n \r\n private static int darken(int color, double fraction) {\r\n int red = Color.red(color);\r\n int green = Color.green(color);\r\n int blue = Color.blue(color);\r\n red = darkenColor(red, fraction);\r\n green = darkenColor(green, fraction);\r\n blue = darkenColor(blue, fraction);\r\n int alpha = Color.alpha(color);\r\n \r\n return Color.argb(alpha, red, green, blue);\r\n }\r\n \r\n private static boolean canLighten(int color, double fraction) {\r\n int red = Color.red(color);\r\n int green = Color.green(color);\r\n int blue = Color.blue(color);\r\n return canLightenComponent(red, fraction)\r\n && canLightenComponent(green, fraction)\r\n && canLightenComponent(blue, fraction);\r\n }\r\n \r\n private static boolean canLightenComponent(int colorComponent, double fraction) {\r\n int red = Color.red(colorComponent);\r\n int green = Color.green(colorComponent);\r\n int blue = Color.blue(colorComponent);\r\n return red + (red * fraction) < 255\r\n && green + (green * fraction) < 255\r\n && blue + (blue * fraction) < 255;\r\n }\r\n \r\n private static int darkenColor(int color, double fraction) {\r\n return (int) Math.max(color - (color * fraction), 0);\r\n }\r\n \r\n private static int lightenColor(int color, double fraction) {\r\n return (int) Math.min(color + (color * fraction), 255);\r\n}\r\n}\r\n\r\npublic void drawableclass() {","androidv4_supported":"1","androidx_supported":"1","category":"Java,Class","source":"","uid":"0","username":"Unknown"},{"id":"363","title":"Clear all data of SharedPrefence","about":"Replace data on your name of SharedPrefence","code":"data.edit().clear().apply();","androidv4_supported":"1","androidx_supported":"1","category":"Java","source":"","uid":"0","username":"Unknown"},{"id":"243","title":"Clear Color Filter Image","about":"","code":"ImageView.clearColorFilter();","androidv4_supported":"1","androidx_supported":"1","category":"Java","source":"","uid":"0","username":"Unknown"},{"id":"140","title":"Clipboard Get Text","about":"","code":"ClipboardManager clipboard = (ClipboardManager) getSystemService(CLIPBOARD_SERVICE);\r\nyourwidget.setText(clipboard.getText());\r\n\/\/ yourwidget is maybe a TextView, EditText, etc","androidv4_supported":"1","androidx_supported":"1","category":"Java","source":"","uid":"0","username":"Unknown"},{"id":"407","title":"ClipboardMonitor","about":"ClipboardMonitor","code":"\n\/\/code by Orexot\n\n((android.content.ClipboardManager) getSystemService(getApplicationContext().CLIPBOARD_SERVICE)).addPrimaryClipChangedListener(new android.content.ClipboardManager.OnPrimaryClipChangedListener() {\npublic void onPrimaryClipChanged() {\nshowMessage(\"Hello!\");\nedittext1.setText(\"Copy!\");\n}\n});\n","androidv4_supported":"1","androidx_supported":"1","category":"Java","source":"","uid":"0","username":"Unknown"},{"id":"384","title":"Close keyboard","about":"Add add source directly and paste this code","code":"android.view.inputmethod.InputMethodManager imm = (android.view.inputmethod.InputMethodManager) this.getSystemService(Activity.INPUT_METHOD_SERVICE); \r\n\/\/Find the currently focused view, so we can grab the correct window token from it. \r\nView view = this.getCurrentFocus();\r\nimm.hideSoftInputFromWindow(view.getWindowToken(), 0);","androidv4_supported":"1","androidx_supported":"1","category":"Java","source":"","uid":"0","username":"Unknown"},{"id":"88","title":"Color Filter Image","about":"","code":"\/\/set color filter on image\r\n_view.setColorFilter(Color.argb(255,0,0,0));\r\n\r\n\/\/remove color filter from image\r\n_view.clearColorFilter();","androidv4_supported":"1","androidx_supported":"1","category":"Java,Widget","source":"","uid":"0","username":"Unknown"},{"id":"263","title":"Color Text in StatusBar","about":"","code":"linear1.setSystemUiVisibility(View.SYSTEM_UI_FLAG_LIGHT_STATUS_BAR);","androidv4_supported":"1","androidx_supported":"1","category":"Java","source":"","uid":"0","username":"Unknown"},{"id":"3","title":"ColorPicker","about":"about in comments... ","code":"public static interface OnColorChangedListener\n\t{\n\t\tpublic void onColorChanged(ColorPicker picker, int color);\n\t}\nclass ColorPicker extends LinearLayout\n{\t\n\tprivate SeekBar r;\n\tprivate SeekBar g;\n\tprivate SeekBar b;\n\tprivate EditText hex;\n\tprivate TextView colorShow;\n\tprivate SeekBar.OnSeekBarChangeListener listener;\n\tprivate OnColorChangedListener l;\n\tpublic ColorPicker(Context c)\n\t{\n\t\tsuper(c);\n\t\tinit();\n\t}\n\t\n\tprivate void init(){\n\t\tsetPadding(16, 16, 16, 16);\n\t\tsetGravity(Gravity.CENTER);\n\t\tsetLayoutParams(new ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));\n\t\tcolorShow = new TextView(getContext());\n\t\tcolorShow.setLayoutParams(new ViewGroup.LayoutParams(60, 60));\n\t\taddView(colorShow);\t\n\t\tlistener = new SeekBar.OnSeekBarChangeListener(){\n\t\t\t@Override\n\t\t\tpublic void onProgressChanged(SeekBar p1, int p2, boolean p3)\n\t\t\t{\n\t\t\t\tint color = Color.rgb(r.getProgress(), g.getProgress(), b.getProgress());\n\t\t\t\tString temp = String.format(\"%1$08x\", color); \/\/sketchware: TODO \"%1$0x\"\n\t\t\t\tString result = temp.substring(2);\n\t\t\t\thex.setText(\"#\" + result);\n\t\t\t\thex.getBackground().setColorFilter(color, PorterDuff.Mode.SRC_IN);\n\t\t\t\tcolorShow.setBackgroundColor(color);\n\t\t\t\t\n\t\t\t\tif(l != null) l.onColorChanged(ColorPicker.this, color);\n\t\t\t}\n\t\t\t@Override public void onStartTrackingTouch(SeekBar p1){}\n\t\t\t@Override public void onStopTrackingTouch(SeekBar p1){}\n\t\t};\n\t\tLinearLayout lay2 = new LinearLayout(getContext());\n\t\tlay2.setOrientation(VERTICAL);\n\t\tlay2.setPadding(8, 0, 8, 8);\n\t\tlay2.setLayoutParams(new ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));\n\t\thex = new EditText(getContext());\n\t\tViewGroup.MarginLayoutParams params = new ViewGroup.MarginLayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);\n\t\tparams.setMargins(16, 0, 16, 0);\n\t\thex.setLayoutParams(params);\n\t\thex.setImeOptions(android.view.inputmethod.EditorInfo.IME_ACTION_DONE);\n\t\thex.setText(\"#000000\");\n\t\thex.setOnEditorActionListener(new TextView.OnEditorActionListener(){\n\t\t\t\t@Override\n\t\t\t\tpublic boolean onEditorAction(TextView text, int code, KeyEvent event)\n\t\t\t\t{\n\t\t\t\t\ttry {\n\t\t\t\t\t\tint color = Color.parseColor(text.getText().toString());\n\t\t\t\t\t\tr.setProgress(Color.red(color));\n\t\t\t\t\t\tg.setProgress(Color.green(color));\n\t\t\t\t\t\tb.setProgress(Color.blue(color));\n\t\t\t\t\t} catch(Exception e){\n\t\t\t\t\t\tToast.makeText(getContext(), \"Color code is wrong\", Toast.LENGTH_SHORT).show();\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\tlay2.addView(hex);\n\t\tr = new SeekBar(getContext());\n\t\tsetProgressColor(r, 0xffcc5577);\n\t\tr.setMax(255);\n\t\tr.setOnSeekBarChangeListener(listener);\n\t\tlay2.addView(r);\n\t\tg = new SeekBar(getContext());\n\t\tsetProgressColor(g, 0xff339977);\n\t\tg.setMax(255);\n\t\tg.setOnSeekBarChangeListener(listener);\n\t\tlay2.addView(g);\n\t\tb = new SeekBar(getContext());\n\t\tsetProgressColor(b, 0xff6077bb);\n\t\tb.setMax(255);\n\t\tb.setOnSeekBarChangeListener(listener);\n\t\tlay2.addView(b);\n\t\taddView(lay2);\n\t\tint color = Color.parseColor(hex.getText().toString());\n\t\tr.setProgress(Color.red(color));\n\t\tg.setProgress(Color.green(color));\n\t\tb.setProgress(Color.blue(color));\n\t\tcolorShow.setBackgroundColor(color);\n\t}\n\tpublic void setColor(int color)\n\t{\n\t\thex.setText(\"#\" + String.format(\"%1$08x\", color).substring(2));\n\t\tr.setProgress(Color.red(color));\n\t\tg.setProgress(Color.green(color));\n\t\tb.setProgress(Color.blue(color));\n\t}\n\tpublic int getColor(boolean refreshFromSlider)\n\t{\n\t\tif(refreshFromSlider) listener.onProgressChanged(null, 0, false);\n\t\treturn Color.parseColor(hex.getText().toString());\n\t}\n\tpublic int getColor()\n\t{\n\t\treturn getColor(true);\n\t}\n\tpublic void setOnColorChangedListener(OnColorChangedListener l)\n\t{\n\t\tthis.l = l;\n\t}\n\tprivate void setProgressColor(AbsSeekBar bar, int color)\n\t{\n\t\tbar.getProgressDrawable().setColorFilter(color, PorterDuff.Mode.SRC_IN); bar.getThumb().setColorFilter(color, PorterDuff.Mode.SRC_IN);\n\t}\n}\n\n\/\/ ColorPicker coll = new ColorPicker(MainActivity.this);\n\/\/ linear1.addView(coll);\n\/\/ Set Color: coll.setColor(Color.parseColor(\"#FFFF00\"));\n\/\/ To Get Color\ncoll.getColor();","androidv4_supported":"1","androidx_supported":"1","category":"Java","source":"","uid":"0","username":"Unknown"},{"id":"141","title":"Combine onClickListener and TouchListener","about":"","code":"img.setOnTouchListener(new OnTouchListener() { PointF DownPT = new PointF(); PointF StartPT = new PointF(); @Override public boolean onTouch(View v, MotionEvent event) { int eid = event.getAction(); switch (eid) {\r\n\r\ncase MotionEvent.ACTION_MOVE : PointF mv=new PointF( event.getX() - DownPT.x, event.getY() - DownPT.y); img.setX((int)(StartPT.x+mv.x)); img.setY((int)(StartPT.y+mv.y)); StartPT= new PointF(img.getX(), img.getY()); break;\r\n\r\ncase MotionEvent.ACTION_DOWN : DownPT.x = event.getX(); DownPT.y = event.getY(); StartPT = new PointF(img.getX(), img.getY() ); break;\r\n\r\ncase MotionEvent.ACTION_UP : float distance = DownPT.x - event.getX(); if (distance == 0) {\r\n\r\n\/\/ intent set screen to another page\r\n\r\nbreak;\r\n}\r\ndefault : break;\r\n}\r\nreturn true;\r\n}\r\n});","androidv4_supported":"1","androidx_supported":"1","category":"Java,List","source":"","uid":"0","username":"Unknown"},{"id":"10","title":"Context Menu","about":"","code":"registerForContextMenu(listview1);\r\n}\r\n@Override\r\npublic void onCreateContextMenu(ContextMenu menu, View v, ContextMenu.ContextMenuInfo menuInfo) {\r\nsuper.onCreateContextMenu(menu, v, menuInfo); \r\nmenu.setHeaderTitle(\"Select the Action\"); \r\nmenu.add(0,v.getId(),0,\"Delete\");\r\nmenu.add(0,v.getId(),0,\"UpperCase\"); \r\nmenu.add(0,v.getId(),0,\"LowerCase\");\r\n}\r\n@Override\r\npublic boolean onContextItemSelected(MenuItem item) {\r\nif(item.getTitle()==\"Delete\") {\r\nToast.makeText(this, \"Delete was pressed\", Toast.LENGTH_SHORT).show();\r\n} else if(item.getTitle()==\"UpperCase\") {\r\nToast.makeText(this, \"UpperCase was pressed\", Toast.LENGTH_SHORT).show();\r\n} else if(item.getTitle()==\"LowerCase\") {\r\nToast.makeText(this, \"LowerCase was pressed\", Toast.LENGTH_SHORT).show();\r\n}\r\nreturn true;","androidv4_supported":"1","androidx_supported":"1","category":"Java","source":"","uid":"0","username":"Unknown"},{"id":"245","title":"Convert Int to String","about":"","code":"Integer.toString(intbyid);","androidv4_supported":"1","androidx_supported":"1","category":"Java","source":"","uid":"0","username":"Unknown"},{"id":"142","title":"Country code","about":"","code":"try {\r\nvar = ((android.telephony.TelephonyManager) MainActivity.this.getSystemService(Context.TELEPHONY_SERVICE)).getSimCountryIso().toUpperCase();\r\n} catch(Exception e) {\r\nvar = \"Not Found\";\r\n}","androidv4_supported":"1","androidx_supported":"1","category":"Java","source":"","uid":"0","username":"Unknown"},{"id":"45","title":"Create Button","about":"","code":"final Button mybutton = new Button(ProjectinActivity.this); mybutton.setText(\"Your Button\"); mybutton.setLayoutParams(new LinearLayout.LayoutParams(android.widget.LinearLayout.LayoutParams.WRAP_CONTENT, android.widget.LinearLayout.LayoutParams.WRAP_CONTENT)); mylinear.addView(mybutton)","androidv4_supported":"1","androidx_supported":"1","category":"Java,Widget","source":"","uid":"0","username":"Unknown"},{"id":"71","title":"Create EditText","about":"","code":"final EditText myedit = new EditText(ProjectinActivity.this); myedit.setHint(\"Your Hint\"); myedit.setLayoutParams(new LinearLayout.LayoutParams(android.widget.LinearLayout.LayoutParams.WRAP_CONTENT, android.widget.LinearLayout.LayoutParams.WRAP_CONTENT)); mylinear.addView(myedit)","androidv4_supported":"1","androidx_supported":"1","category":"Java,Widget","source":"","uid":"0","username":"Unknown"},{"id":"143","title":"Create Path","about":"","code":"private static void CreateDir(String path) {\r\n java.io.File _pathDir = new java.io.File(path);\r\n if (!_pathDir.exists()) {\r\n _pathDir.mkdir();\r\n }\r\n}","androidv4_supported":"1","androidx_supported":"1","category":"Java","source":"","uid":"0","username":"Unknown"},{"id":"144","title":"Create Popup Menu","about":"","code":"PopupMenu popup = new PopupMenu(MainActivity.this, button1);\r\n\r\nMenu menu = popup.getMenu();\r\nmenu.add(\"Aan\");\r\nmenu.add(\"Gabriel\");\r\n\r\n\r\npopup.setOnMenuItemClickListener(new PopupMenu.OnMenuItemClickListener() {\r\n\r\npublic boolean onMenuItemClick(MenuItem item) {\r\nswitch 
